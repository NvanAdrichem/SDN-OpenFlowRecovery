## ------------------------------ ##
## openvswitch 2.1.90 test suite. ##
## ------------------------------ ##

testsuite: command line was:
  $ ../tests/testsuite -C tests AUTOTEST_PATH=utilities:vswitchd:ovsdb:vtep:tests -j4

## --------- ##
## Platform. ##
## --------- ##

hostname = node25
uname -m = x86_64
uname -r = 3.2.0-38-generic
uname -s = Linux
uname -v = #61-Ubuntu SMP Tue Feb 19 12:18:21 UTC 2013

/usr/bin/uname -p = unknown
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = unknown
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /home/nas/build/openvswitch-HEAD-20140410/_debian/utilities
PATH: /home/nas/build/openvswitch-HEAD-20140410/utilities
PATH: /home/nas/build/openvswitch-HEAD-20140410/_debian/vswitchd
PATH: /home/nas/build/openvswitch-HEAD-20140410/vswitchd
PATH: /home/nas/build/openvswitch-HEAD-20140410/_debian/ovsdb
PATH: /home/nas/build/openvswitch-HEAD-20140410/ovsdb
PATH: /home/nas/build/openvswitch-HEAD-20140410/_debian/vtep
PATH: /home/nas/build/openvswitch-HEAD-20140410/vtep
PATH: /home/nas/build/openvswitch-HEAD-20140410/_debian/tests
PATH: /home/nas/build/openvswitch-HEAD-20140410/tests
PATH: /usr/local/sbin
PATH: /usr/local/bin
PATH: /usr/sbin
PATH: /usr/bin
PATH: /sbin
PATH: /bin
PATH: /usr/games
PATH: /usr/lib/jvm/java-6-oracle/bin
PATH: /usr/lib/jvm/java-6-oracle/db/bin
PATH: /usr/lib/jvm/java-6-oracle/jre/bin

testsuite: atconfig:
| # Configurable variable values for building test suites.
| # Generated by ./config.status.
| # Copyright (C) 2010 Free Software Foundation, Inc.
| 
| # The test suite will define top_srcdir=/../.. etc.
| at_testdir='tests'
| abs_builddir='/home/nas/build/openvswitch-HEAD-20140410/_debian/tests'
| at_srcdir='../../tests'
| abs_srcdir='/home/nas/build/openvswitch-HEAD-20140410/_debian/../tests'
| at_top_srcdir='../..'
| abs_top_srcdir='/home/nas/build/openvswitch-HEAD-20140410/_debian/..'
| at_top_build_prefix='../'
| abs_top_builddir='/home/nas/build/openvswitch-HEAD-20140410/_debian'
| 
| # Backward compatibility with Autotest <= 2.59b:
| at_top_builddir=$at_top_build_prefix
| 
| AUTOTEST_PATH='tests'
| 
| SHELL=${CONFIG_SHELL-'/bin/bash'}

testsuite: atlocal:
| # -*- shell-script -*-
| HAVE_OPENSSL='yes'
| HAVE_PYTHON='yes'
| EGREP='/bin/grep -E'
| PERL='/usr/bin/perl'
| 
| if test x"$PYTHON" = x; then
|     PYTHON='/usr/bin/python'
| fi
| 
| PYTHONPATH=$abs_top_srcdir/python:$abs_top_builddir/tests:$PYTHONPATH
| export PYTHONPATH
| 
| PYTHONIOENCODING=utf_8
| export PYTHONIOENCODING
| 
| # PYTHONDONTWRITEBYTECODE=yes keeps Python 2.6+ from creating .pyc and .pyo
| # files.  Creating .py[co] works OK for any given version of Open
| # vSwitch, but it causes trouble if you switch from a version with
| # foo/__init__.py into an (older) version with plain foo.py, since
| # foo/__init__.pyc will cause Python to ignore foo.py.
| #
| # Python before version 2.6 always creates .pyc files, so if you develop
| # with such an older version then you're out of luck.
| PYTHONDONTWRITEBYTECODE=yes
| export PYTHONDONTWRITEBYTECODE
| 
| # Test whether the current working directory name is all ASCII
| # characters.  Some Python code doesn't tolerate non-ASCII characters
| # in filenames very well, so if the current working directory is
| # non-ASCII then we skip the tests that run those programs.
| #
| # This would be just papering over a real problem, except that the
| # tests that we skip are launched from initscripts and thus normally
| # run in system directories with ASCII names.  (This problem only came
| # up at all because the Debian autobuilders do build in a top-level
| # directory named /«BUILDDIR».)
| case `pwd | tr -d ' -~'` in
|     '') non_ascii_cwd=false ;;
|     *) non_ascii_cwd=true
| esac
| 
| if test $HAVE_PYTHON = yes; then
|     if python -m argparse 2>/dev/null; then
|         :
|     else
|         PYTHONPATH=$PYTHONPATH:$abs_top_srcdir/python/compat
|         export PYTHONPATH
|     fi
| fi
| 
| # Enable malloc debugging features.
| case `uname` in
| Linux)
|     MALLOC_CHECK_=2
|     MALLOC_PERTURB_=165
|     export MALLOC_CHECK_
|     export MALLOC_PERTURB_
|     ;;
| FreeBSD)
|     case `uname -r` in
|     [789].*)
|         MALLOC_CONF=AJ
|         ;;
|     *)
|         MALLOC_CONF=abort:true,junk:true,redzone:true
|         ;;
|     esac
|     export MALLOC_CONF
| esac
| 
| # The name of loopback interface 
| case `uname` in
| Linux)
|     LOOPBACK_INTERFACE=lo
|     ;;
| FreeBSD|NetBSD)
|     LOOPBACK_INTERFACE=lo0
|     ;;
| esac

## ---------------- ##
## Tested programs. ##
## ---------------- ##

../../tests/testsuite.at:1: /home/nas/build/openvswitch-HEAD-20140410/_debian/vswitchd/ovs-vswitchd --version
ovs-vswitchd (Open vSwitch) 2.1.90
Compiled Apr 10 2014 15:51:29
OpenFlow versions 0x1:0x1

../../tests/testsuite.at:1: /home/nas/build/openvswitch-HEAD-20140410/_debian/utilities/ovs-vsctl --version
ovs-vsctl (Open vSwitch) 2.1.90
Compiled Apr 10 2014 15:51:18
DB Schema 7.5.0

../../tests/testsuite.at:1: /usr/bin/perl --version

This is perl 5, version 14, subversion 2 (v5.14.2) built for x86_64-linux-gnu-thread-multi
(with 57 registered patches, see perl -V for more detail)

Copyright 1987-2011, Larry Wall

Perl may be copied only under the terms of either the Artistic License or the
GNU General Public License, which may be found in the Perl 5 source kit.

Complete documentation for Perl, including FAQ lists, should be found on
this system using "man perl" or "perldoc perl".  If you have access to the
Internet, point your browser at http://www.perl.org/, the Perl Home Page.


## ------------------ ##
## Running the tests. ##
## ------------------ ##
testsuite: starting at: Thu Apr 10 15:51:53 CEST 2014
4. bfd - Edit the Min Tx/Rx values (bfd.at:194): ok     (0m0.092s 0m0.336s)
3. bfd - concatenated path down (bfd.at:167): ok     (0m0.124s 0m0.324s)
5. bfd - check_tnl_key (bfd.at:225): ok     (0m0.020s 0m0.040s)
1. bfd - basic config on different bridges (bfd.at:45): ok     (0m0.184s 0m0.472s)
7. bfd - bfd forwarding_if_rx - bfd on one side (bfd.at:408): ok     (0m0.096s 0m0.244s)
8. bfd - bfd forwarding_if_rx - bfd on both sides (bfd.at:459): ok     (0m0.112s 0m0.348s)
2. bfd - Verify tunnel down detection (bfd.at:87): ok     (0m0.388s 0m1.160s)
9. bfd - bfd forwarding_if_rx - with bfd decay (bfd.at:524): ok     (0m0.312s 0m0.928s)
11. cfm - check update ovsdb (cfm.at:34): ok     (0m0.076s 0m0.280s)
13. cfm - flap_count (cfm.at:105): ok     (0m0.240s 0m0.464s)
6. bfd - bfd decay (bfd.at:260): ok     (0m0.920s 0m2.584s)
15. lacp - config (lacp.at:8): ok     (0m0.020s 0m0.044s)
16. lacp - multi port config (lacp.at:50): ok     (0m0.024s 0m0.044s)
14. cfm - fault_override (cfm.at:138): ok     (0m0.144s 0m0.476s)
18. test flow extractor (library.at:3): ok     (0m0.080s 0m0.008s)
19. test TCP/IP checksumming (library.at:9): ok     (0m0.000s 0m0.008s)
20. test hash functions (library.at:14): ok     (0m0.004s 0m0.000s)
21. test hash map (library.at:18): ok     (0m0.132s 0m0.012s)
22. test hash index (library.at:23): ok     (0m0.380s 0m0.008s)
23. test atomic operations (library.at:28): ok     (0m0.000s 0m0.004s)
24. test linked lists (library.at:32): ok     (0m0.004s 0m0.008s)
25. test packet library (library.at:37): ok     (0m0.000s 0m0.004s)
26. test SHA-1 (library.at:41): ok     (0m0.180s 0m0.012s)
27. test type properties (library.at:46): ok     (0m0.000s 0m0.000s)
28. test strtok_r bug fix (library.at:50): ok     (0m0.000s 0m0.004s)
29. test byte order conversion (library.at:55): ok     (0m0.000s 0m0.004s)
30. test random number generator (library.at:60): ok     (0m0.004s 0m0.004s)
17. lacp - negotiation (lacp.at:137): ok     (0m0.148s 0m0.488s)
31. ctz() function (library.at:112): ok     (0m0.000s 0m0.004s)
32. clz() function (library.at:112): ok     (0m0.000s 0m0.004s)
33. round_up_pow2() function (library.at:112): ok     (0m0.000s 0m0.004s)
34. round_down_pow2() function (library.at:112): ok     (0m0.000s 0m0.004s)
35. count_1bits() function (library.at:112): ok     (0m0.004s 0m0.008s)
36. log_2_floor() function (library.at:112): ok     (0m0.000s 0m0.004s)
37. bitwise_copy() function (library.at:112): ok     (0m0.016s 0m0.004s)
38. bitwise_zero() function (library.at:112): ok     (0m0.000s 0m0.004s)
39. bitwise_one() function (library.at:112): ok     (0m0.000s 0m0.004s)
41. ovs_scan() function (library.at:112): ok     (0m0.004s 0m0.000s)
42. test unix socket, short pathname - C (library.at:130): ok     (0m0.000s 0m0.004s)
43. test unix socket, long pathname - C (library.at:139): ok     (0m0.004s 0m0.000s)
40. bitwise_is_all_zeros() function (library.at:112): ok     (0m0.320s 0m0.004s)
44. test unix socket, short pathname - Python (library.at:147): ok     (0m0.268s 0m0.080s)
46. ovs_assert (library.at:166): ok     (0m0.000s 0m0.008s)
47. snprintf (library.at:185): ok     (0m0.000s 0m0.004s)
45. test unix socket, long pathname - Python (library.at:157): ok     (0m0.300s 0m0.092s)
48. heap library -- insert delete same order (heap.at:8): ok     (0m0.092s 0m0.008s)
49. heap library -- insert delete reverse order (heap.at:9): ok     (0m0.092s 0m0.000s)
50. heap library -- insert delete every order (heap.at:10): ok     (0m0.160s 0m0.008s)
52. heap library -- raw insert (heap.at:12): ok     (0m0.056s 0m0.004s)
53. heap library -- raw delete (heap.at:13): ok     (0m0.004s 0m0.004s)
54. hrw bundle link selection (bundle.at:10): ok     (0m0.540s 0m0.024s)
51. heap library -- insert delete same order with dups (heap.at:11): ok     (0m0.876s 0m0.008s)
56. hrw bundle single link selection (bundle.at:151): ok     (0m0.056s 0m0.032s)
57. hrw bundle no link selection (bundle.at:159): ok     (0m0.040s 0m0.036s)
58. bundle action missing argument (bundle.at:166): ok     (0m0.000s 0m0.008s)
59. bundle action bad fields (bundle.at:172): ok     (0m0.000s 0m0.008s)
60. bundle action bad algorithm (bundle.at:178): ok     (0m0.000s 0m0.008s)
61. bundle action bad slave type (bundle.at:184): ok     (0m0.004s 0m0.000s)
62. bundle action bad slave delimiter (bundle.at:190): ok     (0m0.000s 0m0.008s)
63. flow classifier - empty (classifier.at:2): ok     (0m0.004s 0m0.000s)
55. active_backup bundle link selection (bundle.at:80): ok     (0m0.720s 0m0.024s)
64. flow classifier - destroy null (classifier.at:2): ok     (0m0.000s 0m0.004s)
10. bfd - flap_count (bfd.at:613): ok     (0m0.924s 0m2.424s)
67. flow classifier - many rules in one list (classifier.at:2): ok     (0m0.704s 0m0.000s)
65. flow classifier - single rule (classifier.at:2): ok     (0m4.224s 0m0.008s)
12. cfm - demand mode (cfm.at:63): ok     (0m1.528s 0m4.216s)
68. flow classifier - many rules in one table (classifier.at:2): ok     (0m4.172s 0m0.004s)
71. miniflow - miniflow (classifier.at:17): ok     (0m0.012s 0m0.000s)
72. miniflow - minimask_has_extra (classifier.at:17): ok     (0m0.016s 0m0.000s)
73. miniflow - minimask_combine (classifier.at:17): ok     (0m0.016s 0m0.000s)
74. flow classifier - lookup segmentation (classifier.at:27): ok     (0m0.016s 0m0.032s)
75. flow classifier - prefix lookup (classifier.at:65): ok     (0m0.024s 0m0.052s)
76. check struct tail padding (check-structs.at:11): ok     (0m0.060s 0m0.016s)
77. check struct internal alignment (check-structs.at:21): ok     (0m0.060s 0m0.016s)
78. check struct declared size (check-structs.at:32): ok     (0m0.052s 0m0.024s)
79. check wrong struct's declared size (check-structs.at:44): ok     (0m0.064s 0m0.012s)
66. flow classifier - rule replacement (classifier.at:2): ok     (0m7.224s 0m0.012s)
80. daemon (daemon.at:3): ok     (0m0.004s 0m0.012s)
82. daemon --detach (daemon.at:69): ok     (0m0.004s 0m0.016s)
81. daemon --monitor (daemon.at:21): ok     (0m0.020s 0m0.032s)
84. daemon --detach startup errors (daemon.at:134): ok     (0m0.028s 0m0.004s)
83. daemon --detach --monitor (daemon.at:85): ok     (0m0.024s 0m0.060s)
85. daemon --detach --monitor startup errors (daemon.at:143): ok     (0m0.008s 0m0.020s)
86. daemon - Python (daemon-py.at:3): ok     (0m0.000s 0m0.000s)
87. daemon --monitor - Python (daemon-py.at:21): ok     (0m0.000s 0m0.032s)
89. daemon --detach - Python (daemon-py.at:107): ok     (0m0.244s 0m0.096s)
88. daemon --monitor restart exit code - Python (daemon-py.at:64): ok     (0m0.000s 0m0.032s)
90. daemon --detach --monitor - Python (daemon-py.at:123): ok     (0m0.248s 0m0.152s)
91. daemon --detach startup errors - Python (daemon-py.at:172): ok     (0m0.264s 0m0.100s)
92. daemon --detach --monitor startup errors - Python (daemon-py.at:181): ok     (0m0.296s 0m0.104s)
93. daemon --detach closes standard fds - Python (daemon-py.at:190): ok     (0m0.240s 0m0.112s)
95. OpenFlow 1.0 action translation (ofp-actions.at:3): ok     (0m0.000s 0m0.004s)
96. OpenFlow 1.1 action translation (ofp-actions.at:132): ok     (0m0.004s 0m0.000s)
97. OpenFlow 1.1 instruction translation (ofp-actions.at:310): ok     (0m0.000s 0m0.004s)
94. daemon --detach --monitor closes standard fds (daemon-py.at:210): ok     (0m0.264s 0m0.108s)
99. empty (ofp-print.at:3): ok     (0m0.000s 0m0.004s)
100. too short (ofp-print.at:9): ok     (0m0.004s 0m0.004s)
98. ofp-actions - inconsistent MPLS actions (ofp-actions.at:481): ok     (0m0.016s 0m0.028s)
101. wrong OpenFlow version (ofp-print.at:17): ok     (0m0.004s 0m0.000s)
102. truncated message (ofp-print.at:27): ok     (0m0.004s 0m0.000s)
103. message only uses part of buffer (ofp-print.at:35): ok     (0m0.000s 0m0.004s)
104. OFPT_HELLO - ordinary (ofp-print.at:44): ok     (0m0.000s 0m0.004s)
105. OFPT_HELLO with extra data (ofp-print.at:52): ok     (0m0.000s 0m0.004s)
106. OFPT_HELLO with version bitmap (ofp-print.at:64): ok     (0m0.000s 0m0.004s)
107. OFPT_HELLO with version bitmap and extra data (ofp-print.at:73): ok     (0m0.004s 0m0.000s)
108. OFPT_HELLO with higher than supported version (ofp-print.at:87): ok     (0m0.004s 0m0.008s)
110. OFPT_ECHO_REQUEST, empty payload (ofp-print.at:148): ok     (0m0.000s 0m0.004s)
109. OFPT_HELLO with contradictory version bitmaps (ofp-print.at:106): ok     (0m0.000s 0m0.016s)
111. OFPT_ECHO_REQUEST, 5-byte payload (ofp-print.at:155): ok     (0m0.000s 0m0.004s)
112. OFPT_ECHO_REPLY, empty payload (ofp-print.at:163): ok     (0m0.000s 0m0.004s)
113. OFPT_ECHO_REPLY, 5-byte payload (ofp-print.at:170): ok     (0m0.004s 0m0.000s)
114. OFPT_FEATURES_REQUEST (ofp-print.at:178): ok     (0m0.000s 0m0.004s)
115. OFPT_FEATURES_REPLY - OF1.0 (ofp-print.at:185): ok     (0m0.004s 0m0.000s)
116. OFPT_FEATURES_REPLY cut off mid-port - OF1.0 (ofp-print.at:235): ok     (0m0.000s 0m0.004s)
117. OFPT_FEATURES_REPLY - OF1.1 (ofp-print.at:274): ok     (0m0.000s 0m0.004s)
118. OFPT_FEATURES_REPLY cut off mid-port - OF1.1 (ofp-print.at:305): ok     (0m0.000s 0m0.004s)
119. OFPT_FEATURES_REPLY - OF1.2 (ofp-print.at:334): ok     (0m0.004s 0m0.000s)
120. OFPT_FEATURES_REPLY cut off mid-port - OF1.2 (ofp-print.at:365): ok     (0m0.004s 0m0.000s)
121. OFPT_FEATURES_REPLY - OF1.3 (ofp-print.at:394): ok     (0m0.000s 0m0.004s)
122. OFPT_FEATURES_REPLY - with auxiliary_id - OF1.3 (ofp-print.at:406): ok     (0m0.004s 0m0.000s)
123. OFPT_GET_CONFIG_REQUEST (ofp-print.at:418): ok     (0m0.000s 0m0.004s)
125. OFPT_GET_CONFIG_REPLY, frags and miss_send_len (ofp-print.at:433): ok     (0m0.004s 0m0.000s)
124. OFPT_GET_CONFIG_REPLY, most common form (ofp-print.at:425): ok     (0m0.004s 0m0.000s)
126. OFPT_PACKET_IN - OF1.0 (ofp-print.at:440): ok     (0m0.000s 0m0.004s)
127. OFPT_PACKET_IN - OF1.0, with hex output of packet data) (ofp-print.at:454): ok     (0m0.000s 0m0.004s)
128. OFPT_PACKET_IN - OF1.1 (ofp-print.at:472): ok     (0m0.000s 0m0.004s)
129. OFPT_PACKET_IN - OF1.2 (ofp-print.at:487): ok     (0m0.000s 0m0.004s)
130. OFPT_PACKET_IN - OF1.2, with hex output of packet data (ofp-print.at:501): ok     (0m0.000s 0m0.004s)
131. OFPT_PACKET_IN - OF1.3 (ofp-print.at:518): ok     (0m0.004s 0m0.000s)
132. OFPT_PACKET_IN - OF1.3, with hex output of packet data (ofp-print.at:533): ok     (0m0.000s 0m0.004s)
133. OFPT_FLOW_REMOVED - OF1.0 (ofp-print.at:551): ok     (0m0.000s 0m0.004s)
134. OFPT_FLOW_REMOVED - OF1.2 (ofp-print.at:565): ok     (0m0.000s 0m0.004s)
135. OFPT_FLOW_REMOVED - OF1.3 (ofp-print.at:576): ok     (0m0.000s 0m0.004s)
136. OFPT_PORT_STATUS - OF1.0 (ofp-print.at:587): ok     (0m0.000s 0m0.004s)
137. OFPT_PORT_STATUS - OF1.1 (ofp-print.at:605): ok     (0m0.000s 0m0.004s)
138. OFPT_PACKET_OUT - OF1.0 (ofp-print.at:624): ok     (0m0.000s 0m0.004s)
139. OFPT_PACKET_OUT - OF1.0, with packet (ofp-print.at:638): ok     (0m0.004s 0m0.000s)
140. OFPT_PACKET_OUT - OF1.0, with hex output of packet data (ofp-print.at:653): ok     (0m0.000s 0m0.004s)
141. OFPT_PACKET_OUT - OF1.1 (ofp-print.at:672): ok     (0m0.004s 0m0.000s)
142. OFPT_PACKET_OUT - OF1.1, with packet (ofp-print.at:683): ok     (0m0.000s 0m0.004s)
143. OFPT_FLOW_MOD - OF1.0 - low verbosity (ofp-print.at:700): ok     (0m0.000s 0m0.004s)
144. OFPT_FLOW_MOD - OF1.1 - low verbosity (ofp-print.at:718): ok     (0m0.000s 0m0.004s)
145. OFPT_FLOW_MOD - OF1.2 - low verbosity (ofp-print.at:738): ok     (0m0.000s 0m0.004s)
147. OFPT_FLOW_MOD - OF1.2 - low verbosity (ofp-print.at:776): ok     (0m0.000s 0m0.004s)
146. OFPT_FLOW_MOD - OF1.0 - high verbosity (ofp-print.at:758): ok     (0m0.000s 0m0.004s)
148. OFPT_FLOW_MOD - OF1.3 - flags - low verbosity (ofp-print.at:795): ok     (0m0.000s 0m0.004s)
149. OFPT_FLOW_MOD - OF1.2 - set-field ip_src (ofp-print.at:813): ok     (0m0.004s 0m0.000s)
150. OFPT_FLOW_MOD - OF1.2 - set-field ip_dst (ofp-print.at:828): ok     (0m0.000s 0m0.004s)
151. OFPT_FLOW_MOD - OF1.2 - set-field sctp_src (ofp-print.at:843): ok     (0m0.004s 0m0.000s)
152. OFPT_FLOW_MOD - OF1.2 - set-field sctp_dst (ofp-print.at:858): ok     (0m0.000s 0m0.004s)
153. OFPT_FLOW_MOD - OF1.3 - meter (ofp-print.at:874): ok     (0m0.004s 0m0.000s)
154. OFPT_FLOW reply - OF1.2 - set-field ip_src (ofp-print.at:885): ok     (0m0.000s 0m0.004s)
155. OFPT_FLOW reply - OF1.2 - set-field ip_dst (ofp-print.at:902): ok     (0m0.000s 0m0.004s)
156. OFPT_FLOW reply - OF1.2 - set-field sctp_src (ofp-print.at:919): ok     (0m0.004s 0m0.000s)
157. OFPT_FLOW reply - OF1.2 - set-field sctp_dst (ofp-print.at:936): ok     (0m0.000s 0m0.004s)
158. OFPT_PORT_MOD - OF1.0 (ofp-print.at:953): ok     (0m0.000s 0m0.004s)
159. OFPT_PORT_MOD - OF1.1 (ofp-print.at:966): ok     (0m0.000s 0m0.004s)
160. OFPT_PORT_MOD - OF1.2 (ofp-print.at:980): ok     (0m0.000s 0m0.004s)
161. OFPT_PORT_MOD - OF1.3 (ofp-print.at:994): ok     (0m0.000s 0m0.004s)
162. OFPT_TABLE_MOD - OF1.1 (ofp-print.at:1008): ok     (0m0.000s 0m0.004s)
163. OFPT_TABLE_MOD - OF1.2 (ofp-print.at:1017): ok     (0m0.000s 0m0.004s)
164. OFPT_TABLE_MOD - OF1.3 (ofp-print.at:1027): ok     (0m0.000s 0m0.004s)
165. OFPST_DESC request (ofp-print.at:1036): ok     (0m0.004s 0m0.000s)
166. OFPST_DESC reply (ofp-print.at:1043): ok     (0m0.004s 0m0.000s)
167. OFPST_FLOW request - OF1.0 (ofp-print.at:1123): ok     (0m0.000s 0m0.004s)
168. OFPST_FLOW request - OF1.2 (ofp-print.at:1135): ok     (0m0.000s 0m0.004s)
169. OFPST_FLOW request - OF1.3 (ofp-print.at:1147): ok     (0m0.004s 0m0.000s)
170. OFPST_FLOW reply - OF1.0 (ofp-print.at:1159): ok     (0m0.000s 0m0.004s)
171. OFPST_FLOW reply - OF1.2 (ofp-print.at:1203): ok     (0m0.000s 0m0.004s)
172. OFPST_AGGREGATE request - OF1.0 (ofp-print.at:1238): ok     (0m0.000s 0m0.004s)
173. OFPST_AGGREGATE request - OF1.2 (ofp-print.at:1250): ok     (0m0.000s 0m0.004s)
174. OFPST_AGGREGATE request - OF1.3 (ofp-print.at:1262): ok     (0m0.000s 0m0.004s)
175. OFPST_AGGREGATE reply - OF1.0 (ofp-print.at:1274): ok     (0m0.000s 0m0.004s)
176. OFPST_AGGREGATE reply - OF1.2 (ofp-print.at:1285): ok     (0m0.004s 0m0.000s)
177. OFPST_AGGREGATE reply - OF1.3 (ofp-print.at:1296): ok     (0m0.000s 0m0.004s)
178. OFPST_TABLE request - OF1.0 (ofp-print.at:1307): ok     (0m0.000s 0m0.004s)
179. OFPST_TABLE request - OF1.1 (ofp-print.at:1314): ok     (0m0.004s 0m0.000s)
180. OFPST_TABLE request - OF1.2 (ofp-print.at:1321): ok     (0m0.004s 0m0.000s)
181. OFPST_TABLE request - OF1.3 (ofp-print.at:1328): ok     (0m0.000s 0m0.004s)
182. OFPST_TABLE reply - OF1.0 (ofp-print.at:1335): ok     (0m0.000s 0m0.004s)
184. OFPST_TABLE reply - OF1.3 (ofp-print.at:1405): ok     (0m0.000s 0m0.004s)
185. OFPST_PORT request - 1.0 (ofp-print.at:1419): ok     (0m0.000s 0m0.004s)
186. OFPST_PORT request - 1.1 (ofp-print.at:1429): ok     (0m0.004s 0m0.000s)
187. OFPST_PORT request - 1.2 (ofp-print.at:1439): ok     (0m0.000s 0m0.004s)
188. OFPST_PORT request - 1.3 (ofp-print.at:1449): ok     (0m0.000s 0m0.004s)
189. OFPST_PORT reply - OF1.0 (ofp-print.at:1459): ok     (0m0.000s 0m0.004s)
190. OFPST_PORT reply - OF1.2 (ofp-print.at:1502): ok     (0m0.000s 0m0.004s)
191. OFPST_PORT reply - OF1.3 (ofp-print.at:1537): ok     (0m0.000s 0m0.004s)
192. OFPST_QUEUE request - OF1.0 (ofp-print.at:1576): ok     (0m0.000s 0m0.004s)
193. OFPST_QUEUE request - OF1.1 (ofp-print.at:1586): ok     (0m0.000s 0m0.004s)
194. OFPST_QUEUE request - OF1.2 (ofp-print.at:1596): ok     (0m0.000s 0m0.004s)
195. OFPST_QUEUE request - OF1.3 (ofp-print.at:1606): ok     (0m0.000s 0m0.004s)
196. OFPST_QUEUE reply - OF1.0 (ofp-print.at:1616): ok     (0m0.000s 0m0.004s)
197. OFPST_QUEUE reply - OF1.1 (ofp-print.at:1643): ok     (0m0.000s 0m0.004s)
198. OFPST_QUEUE reply - OF1.2 (ofp-print.at:1670): ok     (0m0.000s 0m0.004s)
199. OFPST_QUEUE reply - OF1.3 (ofp-print.at:1697): ok     (0m0.004s 0m0.000s)
200. OFPST_GROUP request (ofp-print.at:1730): ok     (0m0.000s 0m0.004s)
201. OFPST_GROUP reply - OF1.1 (ofp-print.at:1739): ok     (0m0.004s 0m0.000s)
202. OFPST_GROUP reply - OF1.3 (ofp-print.at:1759): ok     (0m0.004s 0m0.000s)
203. OFPST_GROUP_DESC request (ofp-print.at:1781): ok     (0m0.000s 0m0.004s)
204. OFPST_GROUP_DESC reply (ofp-print.at:1789): ok     (0m0.000s 0m0.004s)
205. OFPST_GROUP_FEATURES request (ofp-print.at:1806): ok     (0m0.004s 0m0.000s)
206. OFPST_GROUP_FEATURES reply (ofp-print.at:1814): ok     (0m0.000s 0m0.004s)
207. OFPST_PORT_DESC request - OF1.0 (ofp-print.at:1837): ok     (0m0.000s 0m0.004s)
208. OFPST_PORT_DESC reply - OF1.0 (ofp-print.at:1844): ok     (0m0.000s 0m0.004s)
209. OFPT_METER_MOD request - OF1.3 (ofp-print.at:1863): ok     (0m0.004s 0m0.000s)
69. flow classifier - many rules in two tables (classifier.at:2): ok     (0m13.445s 0m0.016s)
210. OFPT_METER_MOD request - bad band - OF1.3 (ofp-print.at:1874): ok     (0m0.000s 0m0.004s)
211. OFPT_METER_MOD request - bad command - OF1.3 (ofp-print.at:1884): ok     (0m0.000s 0m0.008s)
212. OFPT_METER_MOD request - bad flags - OF1.3 (ofp-print.at:1893): ok     (0m0.004s 0m0.000s)
70. flow classifier - many rules in five tables (classifier.at:2): ok     (0m13.621s 0m0.012s)
213. OFPST_METER request - OF1.3 (ofp-print.at:1903): ok     (0m0.000s 0m0.004s)
214. OFPST_METER_CONFIG request - OF1.3 (ofp-print.at:1910): ok     (0m0.004s 0m0.000s)
216. OFPST_METER_FEATURES reply - OF1.3 (ofp-print.at:1924): ok     (0m0.000s 0m0.008s)
215. OFPST_METER_FEATURES request - OF1.3 (ofp-print.at:1917): ok     (0m0.000s 0m0.008s)
217. OFPST_METER_CONFIG reply - OF1.3 (ofp-print.at:1937): ok     (0m0.004s 0m0.004s)
218. OFPST_METER reply - OF1.3 (ofp-print.at:1957): ok     (0m0.000s 0m0.004s)
219. OFPST_TABLE_FEATURES request - OF1.3 (ofp-print.at:1981): ok     (0m0.004s 0m0.008s)
220. OFPT_BARRIER_REQUEST - OF1.0 (ofp-print.at:2202): ok     (0m0.000s 0m0.008s)
221. OFPT_BARRIER_REQUEST - OF1.1 (ofp-print.at:2209): ok     (0m0.000s 0m0.004s)
222. OFPT_BARRIER_REQUEST - OF1.2 (ofp-print.at:2216): ok     (0m0.000s 0m0.008s)
223. OFPT_BARRIER_REQUEST - OF1.3 (ofp-print.at:2223): ok     (0m0.004s 0m0.004s)
224. OFPT_BARRIER_REPLY - OF1.0 (ofp-print.at:2230): ok     (0m0.000s 0m0.008s)
226. OFPT_BARRIER_REPLY - OF1.2 (ofp-print.at:2244): ok     (0m0.004s 0m0.004s)
225. OFPT_BARRIER_REPLY - OF1.1 (ofp-print.at:2237): ok     (0m0.004s 0m0.004s)
227. OFPT_BARRIER_REPLY - OF1.3 (ofp-print.at:2251): ok     (0m0.004s 0m0.004s)
229. OFPT_QUEUE_GET_CONFIG_REQUEST - OF1.2 (ofp-print.at:2265): ok     (0m0.008s 0m0.000s)
228. OFPT_QUEUE_GET_CONFIG_REQUEST - OF1.0 (ofp-print.at:2258): ok     (0m0.004s 0m0.004s)
230. OFPT_QUEUE_GET_CONFIG_REPLY - OF1.0 (ofp-print.at:2273): ok     (0m0.004s 0m0.000s)
231. OFPT_QUEUE_GET_CONFIG_REPLY - OF1.2 (ofp-print.at:2288): ok     (0m0.000s 0m0.008s)
232. OFPT_SET_ASYNC - OF1.3 (ofp-print.at:2303): ok     (0m0.000s 0m0.004s)
233. OFPT_ROLE_REQUEST - OF1.2 (ofp-print.at:2322): ok     (0m0.000s 0m0.008s)
235. NXT_ROLE_REQUEST (ofp-print.at:2342): ok     (0m0.000s 0m0.008s)
234. OFPT_ROLE_REQUEST - nochange - OF1.2 (ofp-print.at:2332): ok     (0m0.000s 0m0.008s)
236. OFPT_ROLE_REPLY - OF1.2 (ofp-print.at:2352): ok     (0m0.004s 0m0.004s)
238. OFP_ROLE_STATUS - master, experimenter - OF1.4 (ofp-print.at:2372): ok     (0m0.000s 0m0.008s)
237. NXT_ROLE_REPLY (ofp-print.at:2362): ok     (0m0.000s 0m0.008s)
239. OFP_ROLE_STATUS - master, config - OF1.4 (ofp-print.at:2382): ok     (0m0.004s 0m0.004s)
240. OFP_ROLE_STATUS - master, config,generation - OF1.4 (ofp-print.at:2392): ok     (0m0.000s 0m0.008s)
241. NXT_SET_PACKET_IN (ofp-print.at:2402): ok     (0m0.000s 0m0.008s)
242. NXT_PACKET_IN (ofp-print.at:2412): ok     (0m0.000s 0m0.004s)
243. NXT_PACKET_IN, with hex output of packet data (ofp-print.at:2433): ok     (0m0.000s 0m0.004s)
244. NXT_SET_ASYNC_CONFIG (ofp-print.at:2458): ok     (0m0.008s 0m0.000s)
245. NXT_SET_CONTROLLER_ID (ofp-print.at:2478): ok     (0m0.004s 0m0.004s)
246. NXT_FLOW_MONITOR_CANCEL (ofp-print.at:2488): ok     (0m0.000s 0m0.004s)
247. NXT_FLOW_MONITOR_PAUSED (ofp-print.at:2498): ok     (0m0.000s 0m0.004s)
249. NXT_SET_FLOW_FORMAT (ofp-print.at:2516): ok     (0m0.000s 0m0.004s)
248. NXT_FLOW_MONITOR_RESUMED (ofp-print.at:2507): ok     (0m0.000s 0m0.008s)
250. NXT_FLOW_MOD, low verbosity (ofp-print.at:2527): ok     (0m0.000s 0m0.008s)
251. NXT_FLOW_MOD, high verbosity (ofp-print.at:2543): ok     (0m0.004s 0m0.004s)
252. OFPT_GROUP_MOD (ofp-print.at:2557): ok     (0m0.000s 0m0.004s)
253. NXT_FLOW_REMOVED (ofp-print.at:2573): ok     (0m0.000s 0m0.008s)
254. NXT_FLOW_MOD_TABLE_ID (ofp-print.at:2589): ok     (0m0.004s 0m0.000s)
255. NXST_FLOW request (ofp-print.at:2599): ok     (0m0.000s 0m0.004s)
256. NXST_FLOW reply (ofp-print.at:2609): ok     (0m0.000s 0m0.004s)
257. NXST_AGGREGATE request (ofp-print.at:2763): ok     (0m0.004s 0m0.004s)
258. NXST_AGGREGATE reply (ofp-print.at:2773): ok     (0m0.000s 0m0.004s)
259. NXST_FLOW_MONITOR request (ofp-print.at:2784): ok     (0m0.000s 0m0.004s)
260. NXST_FLOW_MONITOR reply (ofp-print.at:2797): ok     (0m0.004s 0m0.004s)
262. OFPT_ERROR with type OFPET_HELLO_FAILED - OF1.0 (ofp-errors.at:3): ok     (0m0.000s 0m0.004s)
263. OFPT_ERROR with type OFPET_HELLO_FAILED - OF1.1 (ofp-errors.at:11): ok     (0m0.004s 0m0.004s)
264. OFPT_ERROR with type OFPET_BAD_REQUEST - OF1.0 (ofp-errors.at:19): ok     (0m0.000s 0m0.008s)
261. encoding hellos (ofp-util.at:3): ok     (0m0.016s 0m0.044s)
265. OFPT_ERROR prints type of truncated inner messages (ofp-errors.at:29): ok     (0m0.000s 0m0.008s)
266. OFPT_ERROR with code OFPBMC_BAD_PREREQ - OF1.0 (ofp-errors.at:46): ok     (0m0.000s 0m0.004s)
267. OFPT_ERROR with code OFPBMC_BAD_PREREQ - OF1.1 (ofp-errors.at:54): ok     (0m0.000s 0m0.004s)
268. OFPT_ERROR with type OFPFMFC_OVERLAP - OF1.0 (ofp-errors.at:64): ok     (0m0.000s 0m0.008s)
269. OFPT_ERROR with type OFPBIC_UNSUP_INST - OF1.1 (ofp-errors.at:73): ok     (0m0.004s 0m0.000s)
270. encoding OFPBIC_* experimenter errors (ofp-errors.at:87): ok     (0m0.000s 0m0.012s)
271. encoding errors extension that became official (ofp-errors.at:105): ok     (0m0.004s 0m0.012s)
272. decoding OFPBIC_* experimenter errors (ofp-errors.at:124): ok     (0m0.008s 0m0.012s)
273. decoding experimenter errors (ofp-errors.at:140): ok     (0m0.008s 0m0.016s)
274. encoding experimenter errors (ofp-errors.at:156): ok     (0m0.000s 0m0.016s)
276. ovs-ofctl parse-flows (OpenFlow 1.0) (ovs-ofctl.at:128): ok     (0m0.004s 0m0.000s)
277. ovs-ofctl parse-flows (OpenFlow 1.1) (ovs-ofctl.at:165): ok     (0m0.000s 0m0.004s)
278. ovs-ofctl parse-flows (OpenFlow 1.2) (ovs-ofctl.at:202): ok     (0m0.004s 0m0.008s)
280. ovs-ofctl action inconsistency (OpenFlow 1.1) (ovs-ofctl.at:286): ok     (0m0.000s 0m0.004s)
281. ovs-ofctl parse-flows (With Tunnel-Parameters) (ovs-ofctl.at:292): ok     (0m0.000s 0m0.012s)
282. ovs-ofctl parse-flows (skb_priority) (ovs-ofctl.at:304): ok     (0m0.000s 0m0.008s)
283. ovs-ofctl parse-flows (NXM) (ovs-ofctl.at:316): ok     (0m0.008s 0m0.004s)
279. ovs-ofctl parse-flow with invalid mask (ovs-ofctl.at:247): ok     (0m0.028s 0m0.132s)
284. ovs-ofctl -F nxm parse-flows (ovs-ofctl.at:387): ok     (0m0.008s 0m0.004s)
285. ovs-ofctl -F nxm -mmm parse-flows (ovs-ofctl.at:454): ok     (0m0.000s 0m0.008s)
286. ovs-ofctl parse-nx-match (ovs-ofctl.at:519): ok     (0m0.004s 0m0.016s)
287. ovs-ofctl parse-ofp10-match (ovs-ofctl.at:1120): ok     (0m0.004s 0m0.012s)
288. ovs-ofctl parse-ofp11-match (ovs-ofctl.at:1335): ok     (0m0.008s 0m0.012s)
289. ovs-ofctl parse-nx-match loose (ovs-ofctl.at:1661): ok     (0m0.004s 0m0.016s)
290. ovs-ofctl parse-oxm (ovs-ofctl.at:1676): ok     (0m0.016s 0m0.004s)
291. ovs-ofctl parse-oxm loose (ovs-ofctl.at:2120): ok     (0m0.000s 0m0.016s)
293. ovs-ofctl -F option and NXM features (ovs-ofctl.at:2234): ok     (0m0.004s 0m0.008s)
292. ovs-ofctl check-vlan (ovs-ofctl.at:2137): ok     (0m0.008s 0m0.052s)
183. OFPST_TABLE reply - OF1.2 (ofp-print.at:1350): ok     (0m0.248s 0m0.836s)
294. ovs-ofctl -F option with flow_mods (ovs-ofctl.at:2247): ok     (0m0.016s 0m0.036s)
295. ovs-ofctl dump-flows honors -F option (ovs-ofctl.at:2259): ok     (0m0.016s 0m0.036s)
296. ovs-ofctl dump-flows rejects bad -F option (ovs-ofctl.at:2271): ok     (0m0.024s 0m0.024s)
297. ovs-ofctl add-flow reports non-normalized flows (ovs-ofctl.at:2280): ok     (0m0.016s 0m0.024s)
275. ovs-ofctl parse-flows choice of protocol (ovs-ofctl.at:3): ok     (0m0.124s 0m0.584s)
301. ovs-ofctl -F and -O interaction (ovs-ofctl.at:2430): ok     (0m0.004s 0m0.024s)
302. ovs-ofctl ofp-parse (ovs-ofctl.at:2451): ok     (0m0.004s 0m0.008s)
298. ovs-ofctl dump-flows with sorting (ovs-ofctl.at:2294): ok     (0m0.040s 0m0.072s)
300. ovs-ofctl diff-flows - suppress false differences (ovs-ofctl.at:2413): ok     (0m0.020s 0m0.048s)
304. OVS datapath key parsing and formatting - valid forms (odp.at:3): ok     (0m0.028s 0m0.024s)
305. OVS datapath wildcarded key parsing and formatting - valid forms (odp.at:98): ok     (0m0.008s 0m0.028s)
307. OVS datapath actions parsing and formatting - valid forms (odp.at:229): ok     (0m0.008s 0m0.004s)
306. OVS datapath wildcarded key filtering. (odp.at:164): ok     (0m0.020s 0m0.056s)
303. tcp flags - filtering (ovs-ofctl.at:2469): ok     (0m0.032s 0m0.060s)
308. modulo_n multipath link selection (multipath.at:10): ok     (0m3.876s 0m0.004s)
309. hash_threshold multipath link selection (multipath.at:78): ok     (0m3.768s 0m0.004s)
312. multipath action missing argument (multipath.at:282): ok     (0m0.000s 0m0.004s)
313. multipath action bad fields (multipath.at:288): ok     (0m0.000s 0m0.000s)
314. multipath action bad algorithm (multipath.at:294): ok     (0m0.000s 0m0.000s)
315. multipath action bad n_links (multipath.at:300): ok     (0m0.004s 0m0.000s)
316. multipath action destination too narrow (multipath.at:306): ok     (0m0.000s 0m0.000s)
317. learning action - parsing and formatting (learn.at:3): ok     (0m0.000s 0m0.004s)
318. learning action - parsing and formatting - illegal in_port_oxm (learn.at:18): ok     (0m0.000s 0m0.004s)
319. learning action - parsing and formatting - OXM (learn.at:27): ok     (0m0.000s 0m0.004s)
320. learning action - examples (learn.at:40): ok     (0m0.000s 0m0.004s)
321. learning action - satisfied prerequisites (learn.at:58): ok     (0m0.004s 0m0.000s)
322. learning action - invalid prerequisites (learn.at:73): ok     (0m0.004s 0m0.004s)
323. learning action - standard VLAN+MAC learning (learn.at:88): ok     (0m0.064s 0m0.100s)
311. iter_hash multipath link selection (multipath.at:214): ok     (0m3.812s 0m0.024s)
325. learning action - TCPv4 port learning (learn.at:227): ok     (0m0.028s 0m0.064s)
310. hrw multipath link selection (multipath.at:146): ok     (0m8.413s 0m0.016s)
326. learning action - TCPv6 port learning (learn.at:253): ok     (0m0.036s 0m0.064s)
324. learning action - learn refreshes hard_age (learn.at:157): ok     (0m0.352s 0m0.764s)
327. learning action - self-modifying flow (learn.at:285): ok     (0m0.048s 0m0.116s)
330. learning action - fin_timeout feature (learn.at:469): ok     (0m0.020s 0m0.028s)
331. unix vconn - refuse connection (vconn.at:21): ok     (0m0.000s 0m0.004s)
332. unix vconn - accept then close (vconn.at:21): ok     (0m0.000s 0m0.004s)
333. unix vconn - read hello (vconn.at:21): ok     (0m0.000s 0m0.004s)
334. unix vconn - send plain hello (vconn.at:21): ok     (0m0.000s 0m0.004s)
335. unix vconn - send long hello (vconn.at:21): ok     (0m0.000s 0m0.004s)
336. unix vconn - send echo hello (vconn.at:21): ok     (0m0.000s 0m0.004s)
337. unix vconn - send short hello (vconn.at:21): ok     (0m0.000s 0m0.004s)
338. unix vconn - send invalid version hello (vconn.at:21): ok     (0m0.000s 0m0.004s)
339. tcp vconn - refuse connection (vconn.at:22): ok     (0m0.000s 0m0.004s)
340. tcp vconn - accept then close (vconn.at:22): ok     (0m0.004s 0m0.000s)
341. tcp vconn - read hello (vconn.at:22): ok     (0m0.000s 0m0.004s)
342. tcp vconn - send plain hello (vconn.at:22): ok     (0m0.000s 0m0.004s)
343. tcp vconn - send long hello (vconn.at:22): ok     (0m0.000s 0m0.004s)
344. tcp vconn - send echo hello (vconn.at:22): ok     (0m0.000s 0m0.004s)
345. tcp vconn - send short hello (vconn.at:22): ok     (0m0.004s 0m0.000s)
346. tcp vconn - send invalid version hello (vconn.at:22): ok     (0m0.000s 0m0.004s)
347. ssl vconn - refuse connection (vconn.at:23): ok     (0m0.008s 0m0.004s)
348. ssl vconn - accept then close (vconn.at:23): ok     (0m0.008s 0m0.000s)
349. ssl vconn - read hello (vconn.at:23): ok     (0m0.040s 0m0.008s)
350. ssl vconn - send plain hello (vconn.at:23): ok     (0m0.028s 0m0.016s)
351. ssl vconn - send long hello (vconn.at:23): ok     (0m0.036s 0m0.016s)
352. ssl vconn - send echo hello (vconn.at:23): ok     (0m0.032s 0m0.012s)
353. ssl vconn - send short hello (vconn.at:23): ok     (0m0.036s 0m0.008s)
354. ssl vconn - send invalid version hello (vconn.at:23): ok     (0m0.036s 0m0.004s)
355. components of "/usr/lib" are "/usr", "lib" (file_name.at:12): ok     (0m0.000s 0m0.000s)
356. components of "/usr/" are "/", "usr" (file_name.at:13): ok     (0m0.000s 0m0.000s)
357. components of "usr" are ".", "usr" (file_name.at:14): ok     (0m0.000s 0m0.004s)
358. components of "/" are "/", "/" (file_name.at:15): ok     (0m0.000s 0m0.004s)
359. components of "." are ".", "." (file_name.at:16): ok     (0m0.000s 0m0.004s)
360. components of ".." are ".", ".." (file_name.at:17): ok     (0m0.000s 0m0.004s)
361. components of "//" are "//", "//" (file_name.at:18): ok     (0m0.000s 0m0.004s)
362. components of "//foo" are "//", "foo" (file_name.at:19): ok     (0m0.000s 0m0.000s)
363. components of "" are ".", "." (file_name.at:20): ok     (0m0.000s 0m0.004s)
364. components of "dir/file" are "dir", "file" (file_name.at:23): ok     (0m0.000s 0m0.004s)
365. components of "dir/file/" are "dir", "file" (file_name.at:24): ok     (0m0.000s 0m0.004s)
366. components of "dir/file//" are "dir", "file" (file_name.at:25): ok     (0m0.000s 0m0.000s)
367. components of "///foo" are "/", "foo" (file_name.at:26): ok     (0m0.000s 0m0.004s)
368. follow_symlinks - relative symlinks (file_name.at:36): ok     (0m0.008s 0m0.004s)
369. follow_symlinks - absolute symlinks (file_name.at:53): ok     (0m0.000s 0m0.008s)
370. follow_symlinks - symlinks to directories (file_name.at:70): ok     (0m0.004s 0m0.004s)
371. follow_symlinks - nonexistent targets (file_name.at:83): ok     (0m0.004s 0m0.008s)
372. follow_symlinks - regular files (file_name.at:91): ok     (0m0.000s 0m0.004s)
373. follow_symlinks - device targets (file_name.at:96): ok     (0m0.004s 0m0.004s)
374. follow_symlinks - nonexistent files (file_name.at:105): ok     (0m0.008s 0m0.008s)
375. follow_symlinks - symlink loop (file_name.at:112): ok     (0m0.000s 0m0.004s)
376. wikipedia test vector 1 (aes128.at:10): ok     (0m0.004s 0m0.000s)
377. wikipedia test vector 2 (aes128.at:16): ok     (0m0.000s 0m0.004s)
378. NIST KAT ECBKeySbox128e vector 0 (aes128.at:22): ok     (0m0.000s 0m0.004s)
379. NIST KAT ECBKeySbox128e vector 1 (aes128.at:28): ok     (0m0.004s 0m0.004s)
380. NIST KAT ECBKeySbox128e vector 2 (aes128.at:34): ok     (0m0.000s 0m0.004s)
328. learning action - self-modifying flow with idle_timeout (learn.at:327): ok     (0m0.104s 0m0.164s)
381. NIST KAT ECBKeySbox128e vector 3 (aes128.at:40): ok     (0m0.004s 0m0.000s)
382. NIST KAT ECBKeySbox128e vector 4 (aes128.at:46): ok     (0m0.000s 0m0.004s)
383. NIST KAT ECBKeySbox128e vector 5 (aes128.at:52): ok     (0m0.004s 0m0.004s)
384. NIST KAT ECBKeySbox128e vector 6 (aes128.at:58): ok     (0m0.000s 0m0.000s)
385. NIST KAT ECBKeySbox128e vector 7 (aes128.at:64): ok     (0m0.000s 0m0.004s)
386. NIST KAT ECBKeySbox128e vector 8 (aes128.at:70): ok     (0m0.000s 0m0.000s)
387. NIST KAT ECBKeySbox128e vector 9 (aes128.at:76): ok     (0m0.000s 0m0.000s)
388. NIST KAT ECBKeySbox128e vector 10 (aes128.at:82): ok     (0m0.000s 0m0.004s)
389. NIST KAT ECBKeySbox128e vector 11 (aes128.at:88): ok     (0m0.004s 0m0.000s)
390. NIST KAT ECBKeySbox128e vector 12 (aes128.at:94): ok     (0m0.000s 0m0.004s)
391. NIST KAT ECBKeySbox128e vector 13 (aes128.at:100): ok     (0m0.000s 0m0.008s)
392. NIST KAT ECBKeySbox128e vector 14 (aes128.at:106): ok     (0m0.000s 0m0.004s)
329. learning action - self-modifying flow with hard_timeout (learn.at:385): ok     (0m0.072s 0m0.196s)
394. NIST KAT ECBKeySbox128e vector 16 (aes128.at:118): ok     (0m0.004s 0m0.000s)
395. NIST KAT ECBKeySbox128e vector 17 (aes128.at:124): ok     (0m0.000s 0m0.004s)
393. NIST KAT ECBKeySbox128e vector 15 (aes128.at:112): ok     (0m0.000s 0m0.004s)
396. NIST KAT ECBKeySbox128e vector 18 (aes128.at:130): ok     (0m0.000s 0m0.004s)
397. NIST KAT ECBKeySbox128e vector 19 (aes128.at:136): ok     (0m0.000s 0m0.004s)
398. NIST KAT ECBKeySbox128e vector 20 (aes128.at:142): ok     (0m0.000s 0m0.000s)
400. unixctl ovs-vswitchd help - Python (unixctl-py.at:17): ok     (0m0.424s 0m0.156s)
399. unixctl ovs-vswitchd exit - Python (unixctl-py.at:6): ok     (0m0.772s 0m0.288s)
402. unixctl bad target - Python (unixctl-py.at:74): ok     (0m0.728s 0m0.260s)
404. unixctl server errors - Python (unixctl-py.at:165): ok     (0m0.388s 0m0.140s)
401. unixctl ovs-vswitchd arguments - Python (unixctl-py.at:32): ok     (0m2.068s 0m0.556s)
406. empty array - C (json.at:65): ok     (0m0.004s 0m0.000s)
407. empty array - Python (json.at:65): ok     (0m0.080s 0m0.028s)
408. single-element array - C (json.at:66): ok     (0m0.000s 0m0.004s)
409. single-element array - Python (json.at:66): ok     (0m0.092s 0m0.024s)
410. 2-element array - C (json.at:67): ok     (0m0.000s 0m0.004s)
411. 2-element array - Python (json.at:67): ok     (0m0.084s 0m0.024s)
412. many-element array - C (json.at:68): ok     (0m0.004s 0m0.004s)
299. ovs-ofctl diff-flows (ovs-ofctl.at:2381): ok     (0m0.900s 0m1.980s)
414. missing comma - C (json.at:71): ok     (0m0.000s 0m0.004s)
413. many-element array - Python (json.at:68): ok     (0m0.104s 0m0.012s)
416. trailing comma not allowed - C (json.at:73): ok     (0m0.000s 0m0.004s)
415. missing comma - Python (json.at:71): ok     (0m0.088s 0m0.032s)
418. doubled comma not allowed - C (json.at:75): ok     (0m0.000s 0m0.000s)
417. trailing comma not allowed - Python (json.at:73): ok     (0m0.092s 0m0.024s)
420. empty string - C (json.at:80): ok     (0m0.000s 0m0.004s)
419. doubled comma not allowed - Python (json.at:75): ok     (0m0.092s 0m0.036s)
422. 1-character strings - C (json.at:81): ok     (0m0.000s 0m0.004s)
421. empty string - Python (json.at:80): ok     (0m0.088s 0m0.036s)
405. UUID generation, parsing, serialization (uuid.at:15): ok     (0m0.276s 0m0.740s)
424. escape sequences - C (json.at:84): ok     (0m0.004s 0m0.000s)
423. 1-character strings - Python (json.at:81): ok     (0m0.092s 0m0.032s)
426. Unicode escape sequences - C (json.at:87): ok     (0m0.000s 0m0.008s)
425. escape sequences - Python (json.at:84): ok     (0m0.088s 0m0.028s)
428. surrogate pairs - C (json.at:90): ok     (0m0.004s 0m0.004s)
427. Unicode escape sequences - Python (json.at:87): ok     (0m0.096s 0m0.028s)
430. a string by itself is not valid JSON - C (json.at:96): ok     (0m0.004s 0m0.000s)
432. end of line in quoted string - C (json.at:98): ok     (0m0.000s 0m0.004s)
429. surrogate pairs - Python (json.at:93): ok     (0m0.084s 0m0.036s)
431. a string by itself is not valid JSON - Python (json.at:96): ok     (0m0.084s 0m0.028s)
434. formfeed in quoted string - C (json.at:102): ok     (0m0.000s 0m0.004s)
433. end of line in quoted string - Python (json.at:98): ok     (0m0.084s 0m0.028s)
436. bad escape in quoted string - C (json.at:105): ok     (0m0.000s 0m0.008s)
435. formfeed in quoted string - Python (json.at:102): ok     (0m0.068s 0m0.044s)
438. \u must be followed by 4 hex digits (1) - C (json.at:108): ok     (0m0.000s 0m0.004s)
403. unixctl server - Python (unixctl-py.at:91): ok     (0m3.216s 0m0.916s)
437. bad escape in quoted string - Python (json.at:105): ok     (0m0.080s 0m0.036s)
440. \u must be followed by 4 hex digits (2) - C (json.at:111): ok     (0m0.000s 0m0.008s)
439. \u must be followed by 4 hex digits (1) - Python (json.at:108): ok     (0m0.100s 0m0.024s)
442. isolated leading surrogate not allowed - C (json.at:114): ok     (0m0.004s 0m0.004s)
444. surrogatess must paired properly - C (json.at:117): ok     (0m0.000s 0m0.004s)
441. \u must be followed by 4 hex digits (2) - Python (json.at:111): ok     (0m0.084s 0m0.028s)
443. isolated leading surrogate not allowed - Python (json.at:114): ok     (0m0.116s 0m0.008s)
446. null bytes not allowed - C (json.at:120): ok     (0m0.004s 0m0.000s)
448. end of input in quoted string - C (json.at:124): ok     (0m0.004s 0m0.000s)
445. surrogatess must paired properly - Python (json.at:117): ok     (0m0.088s 0m0.028s)
447. null bytes not allowed - Python (json.at:120): ok     (0m0.100s 0m0.012s)
450. empty object - C (json.at:142): ok     (0m0.000s 0m0.004s)
449. end of input in quoted string - Python (json.at:131): ok     (0m0.084s 0m0.028s)
452. simple object - C (json.at:143): ok     (0m0.000s 0m0.004s)
454. bad value - C (json.at:146): ok     (0m0.004s 0m0.004s)
451. empty object - Python (json.at:142): ok     (0m0.072s 0m0.040s)
453. simple object - Python (json.at:143): ok     (0m0.100s 0m0.016s)
456. missing colon - C (json.at:148): ok     (0m0.004s 0m0.000s)
455. bad value - Python (json.at:146): ok     (0m0.084s 0m0.028s)
458. missing comma - C (json.at:150): ok     (0m0.000s 0m0.004s)
457. missing colon - Python (json.at:148): ok     (0m0.084s 0m0.032s)
460. trailing comma not allowed - C (json.at:152): ok     (0m0.000s 0m0.008s)
459. missing comma - Python (json.at:150): ok     (0m0.092s 0m0.020s)
462. doubled comma not allowed - C (json.at:155): ok     (0m0.000s 0m0.004s)
464. names must be strings - C (json.at:158): ok     (0m0.008s 0m0.000s)
461. trailing comma not allowed - Python (json.at:152): ok     (0m0.084s 0m0.032s)
463. doubled comma not allowed - Python (json.at:155): ok     (0m0.088s 0m0.024s)
466. null - C (json.at:164): ok     (0m0.000s 0m0.004s)
465. names must be strings - Python (json.at:158): ok     (0m0.072s 0m0.036s)
468. false - C (json.at:165): ok     (0m0.000s 0m0.004s)
467. null - Python (json.at:164): ok     (0m0.080s 0m0.036s)
470. true - C (json.at:166): ok     (0m0.000s 0m0.004s)
472. a literal by itself is not valid JSON - C (json.at:167): ok     (0m0.000s 0m0.004s)
469. false - Python (json.at:165): ok     (0m0.080s 0m0.032s)
471. true - Python (json.at:166): ok     (0m0.072s 0m0.036s)
474. nullify is invalid - C (json.at:169): ok     (0m0.000s 0m0.008s)
473. a literal by itself is not valid JSON - Python (json.at:167): ok     (0m0.088s 0m0.032s)
476. nubs is invalid - C (json.at:171): ok     (0m0.004s 0m0.004s)
475. nullify is invalid - Python (json.at:169): ok     (0m0.084s 0m0.024s)
478. xxx is invalid - C (json.at:173): ok     (0m0.004s 0m0.004s)
480. integers expressed as reals - C (json.at:178): ok     (0m0.000s 0m0.008s)
482. large integers - C (json.at:188): ok     (0m0.000s 0m0.000s)
477. nubs is invalid - Python (json.at:171): ok     (0m0.096s 0m0.024s)
481. integers expressed as reals - Python (json.at:178): ok     (0m0.056s 0m0.024s)
479. xxx is invalid - Python (json.at:173): ok     (0m0.076s 0m0.032s)
486. large integers that overflow to reals - C (json.at:200): ok     (0m0.000s 0m0.004s)
484. large integers expressed as reals - C (json.at:192): ok     (0m0.004s 0m0.000s)
488. negative zero - C (json.at:205): ok     (0m0.004s 0m0.004s)
485. large integers expressed as reals - Python (json.at:192): ok     (0m0.080s 0m0.032s)
483. large integers - Python (json.at:188): ok     (0m0.092s 0m0.024s)
490. reals - C (json.at:210): ok     (0m0.000s 0m0.004s)
487. large integers that overflow to reals - Python (json.at:200): ok     (0m0.080s 0m0.036s)
489. negative zero - Python (json.at:205): ok     (0m0.096s 0m0.020s)
492. scientific notation - C (json.at:214): ok     (0m0.004s 0m0.004s)
491. reals - Python (json.at:210): ok     (0m0.084s 0m0.032s)
493. scientific notation - Python (json.at:214): ok     (0m0.096s 0m0.020s)
494. +/- DBL_MAX - C (json.at:221): ok     (0m0.000s 0m0.004s)
496. negative reals - C (json.at:226): ok     (0m0.000s 0m0.004s)
498. negative scientific notation - C (json.at:230): ok     (0m0.000s 0m0.004s)
495. +/- DBL_MAX - Python (json.at:221): ok     (0m0.096s 0m0.024s)
500. 1e-9999 underflows to 0 - C (json.at:234): ok     (0m0.000s 0m0.008s)
497. negative reals - Python (json.at:226): ok     (0m0.100s 0m0.024s)
499. negative scientific notation - Python (json.at:230): ok     (0m0.100s 0m0.016s)
502. a number by itself is not valid JSON - C (json.at:238): ok     (0m0.000s 0m0.008s)
504. leading zeros not allowed - C (json.at:240): ok     (0m0.000s 0m0.008s)
501. 1e-9999 underflows to 0 - Python (json.at:234): ok     (0m0.096s 0m0.020s)
503. a number by itself is not valid JSON - Python (json.at:238): ok     (0m0.080s 0m0.036s)
506. 1e9999 is too big - C (json.at:244): ok     (0m0.000s 0m0.008s)
505. leading zeros not allowed - Python (json.at:240): ok     (0m0.076s 0m0.040s)
508. exponent bigger than INT_MAX - C (json.at:248): ok     (0m0.000s 0m0.012s)
507. 1e9999 is too big - Python (json.at:244): ok     (0m0.076s 0m0.040s)
510. decimal point must be followed by digit - C (json.at:252): ok     (0m0.004s 0m0.008s)
509. exponent bigger than INT_MAX - Python (json.at:248): ok     (0m0.100s 0m0.016s)
512. exponent must contain at least one digit (1) - C (json.at:256): ok     (0m0.000s 0m0.004s)
511. decimal point must be followed by digit - Python (json.at:252): ok     (0m0.096s 0m0.016s)
514. exponent must contain at least one digit (2) - C (json.at:260): ok     (0m0.000s 0m0.004s)
513. exponent must contain at least one digit (1) - Python (json.at:256): ok     (0m0.108s 0m0.012s)
516. exponent must contain at least one digit (3) - C (json.at:264): ok     (0m0.000s 0m0.004s)
515. exponent must contain at least one digit (2) - Python (json.at:260): ok     (0m0.088s 0m0.036s)
518. RFC 4267 object example - C (json.at:271): ok     (0m0.004s 0m0.000s)
517. exponent must contain at least one digit (3) - Python (json.at:264): ok     (0m0.096s 0m0.028s)
520. RFC 4267 array example - C (json.at:287): ok     (0m0.000s 0m0.008s)
519. RFC 4267 object example - Python (json.at:271): ok     (0m0.088s 0m0.032s)
522. trailing garbage - C (json.at:314): ok     (0m0.000s 0m0.004s)
521. RFC 4267 array example - Python (json.at:287): ok     (0m0.092s 0m0.032s)
524. formfeeds are not valid white space - C (json.at:316): ok     (0m0.000s 0m0.004s)
523. trailing garbage - Python (json.at:314): ok     (0m0.088s 0m0.024s)
526. ';' is not a valid token - C (json.at:318): ok     (0m0.000s 0m0.004s)
525. formfeeds are not valid white space - Python (json.at:316): ok     (0m0.080s 0m0.040s)
528. arrays nesting too deep - C (json.at:320): ok     (0m0.000s 0m0.004s)
527. ';' is not a valid token - Python (json.at:318): ok     (0m0.084s 0m0.028s)
530. objects nesting too deep - C (json.at:324): ok     (0m0.000s 0m0.008s)
532. input may not be empty (json.at:329): ok     (0m0.004s 0m0.004s)
533. multiple adjacent objects - C (json.at:337): ok     (0m0.004s 0m0.000s)
529. arrays nesting too deep - Python (json.at:320): ok     (0m0.100s 0m0.044s)
535. multiple space-separated objects - C (json.at:342): ok     (0m0.000s 0m0.004s)
531. objects nesting too deep - Python (json.at:324): ok     (0m0.168s 0m0.020s)
534. multiple adjacent objects - Python (json.at:337): ok     (0m0.084s 0m0.032s)
537. multiple objects on separate lines - C (json.at:347): ok     (0m0.000s 0m0.004s)
536. multiple space-separated objects - Python (json.at:342): ok     (0m0.104s 0m0.012s)
539. multiple objects and arrays - C (json.at:354): ok     (0m0.000s 0m0.008s)
541. garbage between multiple objects - C (json.at:360): ok     (0m0.004s 0m0.004s)
538. multiple objects on separate lines - Python (json.at:347): ok     (0m0.096s 0m0.024s)
540. multiple objects and arrays - Python (json.at:354): ok     (0m0.092s 0m0.028s)
543. garbage after multiple objects - C (json.at:364): ok     (0m0.000s 0m0.008s)
542. garbage between multiple objects - Python (json.at:360): ok     (0m0.076s 0m0.040s)
545. JSON-RPC request and successful reply (jsonrpc.at:3): ok     (0m0.004s 0m0.008s)
544. garbage after multiple objects - Python (json.at:364): ok     (0m0.088s 0m0.036s)
546. JSON-RPC request and error reply (jsonrpc.at:15): ok     (0m0.000s 0m0.012s)
547. JSON-RPC notification (jsonrpc.at:27): ok     (0m0.000s 0m0.020s)
551. tunnel - input (tunnel.at:3): ok     (0m0.024s 0m0.088s)
548. JSON-RPC request and successful reply - Python (jsonrpc-py.at:3): ok     (0m0.772s 0m0.232s)
549. JSON-RPC request and error reply - Python (jsonrpc-py.at:16): ok     (0m0.752s 0m0.268s)
550. JSON-RPC notification - Python (jsonrpc-py.at:29): ok     (0m0.764s 0m0.244s)
552. tunnel - ECN decapsulation (tunnel.at:64): ok     (0m0.016s 0m0.048s)
553. tunnel - output (tunnel.at:111): ok     (0m0.016s 0m0.040s)
555. tunnel - set_tunnel (tunnel.at:181): ok     (0m0.020s 0m0.036s)
554. tunnel - ToS and TTL inheritance (tunnel.at:143): ok     (0m0.024s 0m0.044s)
556. tunnel - key (tunnel.at:215): ok     (0m0.016s 0m0.028s)
558. tunnel - VXLAN (tunnel.at:313): ok     (0m0.008s 0m0.032s)
559. tunnel - LISP (tunnel.at:325): ok     (0m0.012s 0m0.032s)
557. tunnel - key match (tunnel.at:264): ok     (0m0.012s 0m0.052s)
562. lock and unlock (lockfile.at:12): ok     (0m0.004s 0m0.004s)
563. lock and unlock twice (lockfile.at:14): ok     (0m0.000s 0m0.004s)
564. lock blocks same process (lockfile.at:16): ok     (0m0.000s 0m0.004s)
560. tunnel - different VXLAN UDP port (tunnel.at:337): ok     (0m0.020s 0m0.040s)
565. lock blocks same process twice (lockfile.at:20): ok     (0m0.000s 0m0.008s)
566. lock blocks other process (lockfile.at:25): ok     (0m0.000s 0m0.012s)
567. lock twice blocks other process (lockfile.at:30): ok     (0m0.004s 0m0.000s)
568. lock and unlock allows other process (lockfile.at:36): ok     (0m0.000s 0m0.008s)
561. ofproto-dpif - set_field - tun_src/tun_dst/tun_id (tunnel.at:366): ok     (0m0.020s 0m0.044s)
569. lock multiple (lockfile.at:38): ok     (0m0.000s 0m0.008s)
570. lock symlink (lockfile.at:42): ok     (0m0.004s 0m0.004s)
571. lock symlink to dir (lockfile.at:49): ok     (0m0.000s 0m0.004s)
572. nothing happens if not enabled - C (reconnect.at:26): ok     (0m0.008s 0m0.000s)
574. quick connect, idle disconnect - C (reconnect.at:37): ok     (0m0.000s 0m0.004s)
576. slow connect, idle disconnect - C (reconnect.at:93): ok     (0m0.008s 0m0.004s)
578. connect backs off - C (reconnect.at:163): ok     (0m0.000s 0m0.008s)
573. nothing happens if not enabled - Python (reconnect.at:26): ok     (0m0.128s 0m0.024s)
575. quick connect, idle disconnect - Python (reconnect.at:37): ok     (0m0.136s 0m0.016s)
580. connections with no data preserve backoff - C (reconnect.at:362): ok     (0m0.000s 0m0.004s)
577. slow connect, idle disconnect - Python (reconnect.at:93): ok     (0m0.128s 0m0.024s)
582. brief connection preserves backoff - C (reconnect.at:526): ok     (0m0.000s 0m0.004s)
579. connect backs off - Python (reconnect.at:163): ok     (0m0.140s 0m0.024s)
581. connections with no data preserve backoff - Python (reconnect.at:362): ok     (0m0.096s 0m0.048s)
584. brief connection with data preserves backoff - C (reconnect.at:657): ok     (0m0.000s 0m0.004s)
586. long connection resets backoff - C (reconnect.at:818): ok     (0m0.008s 0m0.000s)
583. brief connection preserves backoff - Python (reconnect.at:526): ok     (0m0.124s 0m0.032s)
588. connection attempt fails quickly - C (reconnect.at:979): ok     (0m0.000s 0m0.004s)
585. brief connection with data preserves backoff - Python (reconnect.at:657): ok     (0m0.128s 0m0.028s)
587. long connection resets backoff - Python (reconnect.at:818): ok     (0m0.112s 0m0.044s)
590. max-tries of 1 honored - C (reconnect.at:1034): ok     (0m0.000s 0m0.004s)
589. connection attempt fails quickly - Python (reconnect.at:979): ok     (0m0.108s 0m0.040s)
592. max-tries of 0 honored - C (reconnect.at:1094): ok     (0m0.000s 0m0.004s)
594. passive mode - C (reconnect.at:1110): ok     (0m0.000s 0m0.008s)
591. max-tries of 1 honored - Python (reconnect.at:1034): ok     (0m0.124s 0m0.024s)
593. max-tries of 0 honored - Python (reconnect.at:1094): ok     (0m0.108s 0m0.036s)
595. passive mode - Python (reconnect.at:1110): ok     (0m0.112s 0m0.032s)
596. ovs-vswitchd detaches correctly with empty db (ovs-vswitchd.at:7): ok     (0m0.004s 0m0.016s)
597. ofproto - echo request (ofproto.at:3): ok     (0m0.004s 0m0.032s)
598. ofproto - handling messages with bad version (ofproto.at:9): ok     (0m0.012s 0m0.056s)
599. ofproto - feature request, config request (ofproto.at:32): ok     (0m0.008s 0m0.036s)
600. ofproto - set OpenFlow port number (ofproto.at:49): ok     (0m0.024s 0m0.020s)
601. ofproto - port stats - (OpenFlow 1.0) (ofproto.at:82): ok     (0m0.024s 0m0.020s)
603. ofproto - port-desc stats (OpenFlow 1.0) (ofproto.at:106): ok     (0m0.008s 0m0.032s)
602. ofproto - port stats - (OpenFlow 1.2) (ofproto.at:93): ok     (0m0.012s 0m0.028s)
604. ofproto - port-desc stats (OpenFlow 1.2) (ofproto.at:121): ok     (0m0.012s 0m0.032s)
605. ofproto - queue stats - (OpenFlow 1.0) (ofproto.at:136): ok     (0m0.024s 0m0.032s)
606. ofproto - queue stats - (OpenFlow 1.2) (ofproto.at:153): ok     (0m0.004s 0m0.052s)
607. ofproto - queue configuration - (OpenFlow 1.0) (ofproto.at:172): ok     (0m0.032s 0m0.028s)
608. ofproto - queue configuration - (OpenFlow 1.2) (ofproto.at:186): ok     (0m0.024s 0m0.024s)
609. ofproto - del group (ofproto.at:202): ok     (0m0.032s 0m0.032s)
611. ofproto - flow mod checks group availability (ofproto.at:271): ok     (0m0.004s 0m0.052s)
610. ofproto - del group deletes flows (ofproto.at:231): ok     (0m0.076s 0m0.140s)
612. ofproto - group description (ofproto.at:299): ok     (0m0.008s 0m0.036s)
613. ofproto - group description (ofproto.at:312): ok     (0m0.016s 0m0.024s)
614. ofproto - group features (ofproto.at:325): ok     (0m0.020s 0m0.016s)
615. ofproto - group stats (ofproto.at:339): ok     (0m0.024s 0m0.072s)
618. ofproto - basic flow_mod commands (NXM) (ofproto.at:426): ok     (0m0.048s 0m0.088s)
619. ofproto - basic flow_mod commands (OpenFlow 1.0) (ofproto.at:448): ok     (0m0.048s 0m0.100s)
617. ofproto - mod-port (OpenFlow 1.2) (ofproto.at:395): ok     (0m0.048s 0m0.096s)
616. ofproto - mod-port (OpenFlow 1.0) (ofproto.at:361): ok     (0m0.036s 0m0.136s)
620. ofproto - basic flow_mod commands (OpenFlow 1.1) (ofproto.at:470): ok     (0m0.024s 0m0.076s)
621. ofproto - flow_mod negative test (OpenFlow 1.1) (ofproto.at:493): ok     (0m0.028s 0m0.020s)
622. ofproto - set-field flow_mod commands (NXM) (ofproto.at:507): ok     (0m0.032s 0m0.064s)
623. ofproto - basic flow_mod commands (OpenFlow 1.2) (ofproto.at:518): ok     (0m0.032s 0m0.072s)
625. ofproto - mod flow with cookie change (OpenFlow 1.0) (ofproto.at:561): ok     (0m0.024s 0m0.128s)
624. ofproto - dump flows with cookie (ofproto.at:537): ok     (0m0.056s 0m0.132s)
626. ofproto - mod flow with cookie change (NXM) (ofproto.at:577): ok     (0m0.032s 0m0.140s)
627. ofproto - no mod flow with cookie change (OpenFlow 1.1) (ofproto.at:593): ok     (0m0.064s 0m0.104s)
628. ofproto - no mod flow with cookie change (OpenFlow 1.2) (ofproto.at:609): ok     (0m0.060s 0m0.092s)
629. ofproto - mod flows based on cookie mask (OpenFlow 1.0) (ofproto.at:625): ok     (0m0.068s 0m0.072s)
630. ofproto - mod flows based on cookie mask (OpenFlow 1.1) (ofproto.at:647): ok     (0m0.060s 0m0.088s)
631. ofproto - mod flows based on cookie mask (OpenFlow 1.2) (ofproto.at:669): ok     (0m0.052s 0m0.112s)
633. ofproto - mod flow with cookie miss (mask==0) - NXM (ofproto.at:714): ok     (0m0.028s 0m0.080s)
635. ofproto - mod flow with cookie miss (mask==0) - OF1.2 (ofproto.at:734): ok     (0m0.040s 0m0.068s)
634. ofproto - mod flow with cookie miss (mask==0) - OF1.1 (ofproto.at:724): ok     (0m0.032s 0m0.080s)
632. ofproto - mod flows based on cookie mask with cookie change (ofproto.at:692): ok     (0m0.052s 0m0.124s)
638. ofproto - mod flow with cookie miss (mask!=0) - OF1.2 (ofproto.at:761): ok     (0m0.040s 0m0.072s)
636. ofproto - mod flow with cookie miss (mask!=0) - NXM (ofproto.at:743): ok     (0m0.032s 0m0.072s)
637. ofproto - mod flow with cookie miss (mask!=0) - OF1.1 (ofproto.at:752): ok     (0m0.036s 0m0.076s)
639. ofproto - del flows with cookies (ofproto.at:770): ok     (0m0.060s 0m0.100s)
640. ofproto - del flows based on cookie (ofproto.at:789): ok     (0m0.044s 0m0.088s)
641. ofproto - del flows based on cookie mask (ofproto.at:810): ok     (0m0.036s 0m0.092s)
642. ofproto - del flows based on table id (NXM) (ofproto.at:829): ok     (0m0.084s 0m0.180s)
643. ofproto - del flows based on table id (OpenFlow 1.1) (ofproto.at:861): ok     (0m0.076s 0m0.152s)
644. ofproto - del flows based on table id (OpenFlow 1.2) (ofproto.at:894): ok     (0m0.056s 0m0.200s)
647. ofproto - hard limits on flow table size (OpenFlow 1.0) (ofproto.at:1004): ok     (0m0.092s 0m0.124s)
648. ofproto - hard limits on flow table size (OpenFlow 1.2) (ofproto.at:1048): ok     (0m0.044s 0m0.128s)
649. ofproto - eviction upon table overflow (OpenFlow 1.0) (ofproto.at:1087): ok     (0m0.104s 0m0.180s)
650. ofproto - eviction upon table overflow (OpenFlow 1.2) (ofproto.at:1145): ok     (0m0.112s 0m0.188s)
651. ofproto - eviction upon table overflow, with fairness (OpenFlow 1.0) (ofproto.at:1204): ok     (0m0.100s 0m0.216s)
645. ofproto - flow table configuration (OpenFlow 1.0) (ofproto.at:926): ok     (0m0.088s 0m0.236s)
646. ofproto - flow table configuration (OpenFlow 1.2) (ofproto.at:962): ok     (0m0.100s 0m0.296s)
652. ofproto - eviction upon table overflow, with fairness (OpenFlow 1.2) (ofproto.at:1286): ok     (0m0.092s 0m0.188s)
653. ofproto - eviction upon table overflow, with modified hard timeout (ofproto.at:1368): ok     (0m0.048s 0m0.124s)
654. ofproto - eviction upon table overflow, with modified idle timeout (ofproto.at:1412): ok     (0m0.064s 0m0.132s)
658. ofproto - controller role (OpenFlow 1.2) (ofproto.at:1765): ok     (0m0.016s 0m0.056s)
655. ofproto - asynchronous message control (OpenFlow 1.0) (ofproto.at:1456): ok     (0m0.096s 0m0.292s)
656. ofproto - asynchronous message control (OpenFlow 1.2) (ofproto.at:1559): ok     (0m0.120s 0m0.260s)
659. ofproto - packet-out from controller (OpenFlow 1.0) (ofproto.at:1809): ok     (0m0.032s 0m0.048s)
657. ofproto - asynchronous message control (OpenFlow 1.3) (ofproto.at:1663): ok     (0m0.088s 0m0.252s)
660. ofproto - packet-out from controller (OpenFlow 1.2) (ofproto.at:1845): ok     (0m0.020s 0m0.040s)
661. ofproto - packet-out from controller (OpenFlow 1.1) (ofproto.at:1878): ok     (0m0.008s 0m0.028s)
662. ofproto - packet-out with metadata (NXM) (ofproto.at:1909): ok     (0m0.016s 0m0.032s)
663. ofproto - packet-out with metadata (OpenFlow 1.2) (ofproto.at:1937): ok     (0m0.016s 0m0.040s)
664. ofproto - packet-out with tunnel metadata (OpenFlow 1.2) (ofproto.at:1964): ok     (0m0.008s 0m0.052s)
667. ofproto - event filtering (OpenFlow 1.3) (ofproto.at:2241): ok     (0m0.028s 0m0.032s)
665. ofproto - flow monitoring (ofproto.at:1990): ok     (0m0.072s 0m0.132s)
670. ofproto-dpif, active-backup bonding (ofproto-dpif.at:57): ok     (0m0.076s 0m0.136s)
669. ofproto-dpif - dummy interface (ofproto-dpif.at:24): ok     (0m0.048s 0m0.108s)
666. ofproto - flow monitoring pause and resume (ofproto.at:2138): ok     (0m0.524s 0m0.256s)
671. ofproto-dpif, balance-slb bonding (ofproto-dpif.at:103): ok     (0m0.236s 0m0.504s)
673. ofproto-dpif - resubmit (ofproto-dpif.at:200): ok     (0m0.012s 0m0.048s)
675. ofproto-dpif - write actions (ofproto-dpif.at:234): ok     (0m0.020s 0m0.044s)
674. ofproto-dpif - goto table (ofproto-dpif.at:220): ok     (0m0.036s 0m0.088s)
676. ofproto-dpif - clear actions (ofproto-dpif.at:251): ok     (0m0.020s 0m0.028s)
677. ofproto-dpif - group chaining not supported (ofproto-dpif.at:267): ok     (0m0.020s 0m0.028s)
672. ofproto-dpif, balance-tcp bonding (ofproto-dpif.at:147): ok     (0m0.172s 0m0.532s)
678. ofproto-dpif - all group in action list (ofproto-dpif.at:278): ok     (0m0.008s 0m0.044s)
679. ofproto-dpif - indirect group in action list (ofproto-dpif.at:291): ok     (0m0.024s 0m0.048s)
680. ofproto-dpif - all group in action set (ofproto-dpif.at:303): ok     (0m0.016s 0m0.036s)
681. ofproto-dpif - indirect group in action set (ofproto-dpif.at:316): ok     (0m0.016s 0m0.032s)
683. ofproto-dpif - select group with watch port (ofproto-dpif.at:348): ok     (0m0.024s 0m0.048s)
684. ofproto-dpif - select group with weight (ofproto-dpif.at:360): ok     (0m0.020s 0m0.044s)
682. ofproto-dpif - select group (ofproto-dpif.at:328): ok     (0m0.028s 0m0.084s)
685. ofproto-dpif - fast failover group (ofproto-dpif.at:372): ok     (0m0.016s 0m0.040s)
686. ofproto-dpif - registers (ofproto-dpif.at:384): ok     (0m0.032s 0m0.040s)
687. ofproto-dpif - push-pop (ofproto-dpif.at:419): ok     (0m0.024s 0m0.036s)
688. ofproto-dpif - output (ofproto-dpif.at:438): ok     (0m0.024s 0m0.036s)
689. ofproto-dpif - dec_ttl (ofproto-dpif.at:459): ok     (0m0.028s 0m0.064s)
668. ofproto - ofport_request (ofproto.at:2275): ok     (0m0.476s 0m1.556s)
693. ofproto-dpif - output, OFPP_NONE ingress port (ofproto-dpif.at:547): ok     (0m0.036s 0m0.080s)
694. ofproto-dpif - DSCP (ofproto-dpif.at:565): ok     (0m0.028s 0m0.048s)
690. ofproto-dpif - dec_ttl without arguments at offset 32 in ofpacts (ofproto-dpif.at:503): ok     (0m0.076s 0m0.284s)
691. ofproto-dpif - dec_ttl with arguments at offset 32 in ofpacts (ofproto-dpif.at:520): ok     (0m0.100s 0m0.256s)
695. ofproto-dpif - output/flood flags (ofproto-dpif.at:593): ok     (0m0.052s 0m0.168s)
692. ofproto-dpif - note at offset 24 in ofpacts (ofproto-dpif.at:537): ok     (0m0.080s 0m0.252s)
696. ofproto-dpif - Default Table Miss - OF1.0 (OFPTC_TABLE_MISS_CONTROLLER) (ofproto-dpif.at:651): ok     (0m0.028s 0m0.068s)
697. ofproto-dpif - Default Table Miss - OF1.3 (OFPTC_TABLE_MISS_DROP) (ofproto-dpif.at:685): ok     (0m0.032s 0m0.068s)
698. ofproto-dpif - Table Miss - goto table and OFPTC_TABLE_MISS_CONTROLLER (ofproto-dpif.at:713): ok     (0m0.016s 0m0.072s)
699. ofproto-dpif - Table Miss - resubmit and OFPTC_TABLE_MISS_CONTROLLER (ofproto-dpif.at:750): ok     (0m0.008s 0m0.080s)
700. ofproto-dpif - Table Miss - OFPTC_TABLE_MISS_CONTINUE (ofproto-dpif.at:779): ok     (0m0.040s 0m0.052s)
703. ofproto-dpif - Table Miss - OFPTC_TABLE_MISS_DROP (ofproto-dpif.at:951): ok     (0m0.028s 0m0.068s)
701. ofproto-dpif - Table Miss - goto table and OFPTC_TABLE_MISS_CONTINUE (ofproto-dpif.at:839): ok     (0m0.024s 0m0.048s)
702. ofproto-dpif - Table Miss - resubmit and OFPTC_TABLE_MISS_CONTINUE (ofproto-dpif.at:904): ok     (0m0.016s 0m0.064s)
707. ofproto-dpif - table-miss flow (OpenFlow 1.0) (ofproto-dpif.at:1565): ok     (0m0.012s 0m0.048s)
704. ofproto-dpif - Table Miss - goto table and OFPTC_TABLE_MISS_DROP (ofproto-dpif.at:979): ok     (0m0.020s 0m0.076s)
705. ofproto-dpif - Table Miss - resubmit and OFPTC_TABLE_MISS_DROP (ofproto-dpif.at:1011): ok     (0m0.048s 0m0.076s)
708. ofproto-dpif - table-miss flow (OpenFlow 1.3) (ofproto-dpif.at:1606): ok     (0m0.036s 0m0.060s)
709. ofproto-dpif - ARP modification slow-path (ofproto-dpif.at:1648): ok     (0m0.028s 0m0.052s)
711. ofproto-dpif - MPLS handling (ofproto-dpif.at:1811): ok     (0m0.040s 0m0.084s)
713. ofproto-dpif - fragment handling (ofproto-dpif.at:2319): ok     (0m0.044s 0m0.052s)
714. ofproto-dpif - exit (ofproto-dpif.at:2365): ok     (0m0.012s 0m0.048s)
715. ofproto-dpif - mirroring, select_all (ofproto-dpif.at:2390): ok     (0m0.012s 0m0.048s)
712. ofproto-dpif - VLAN+MPLS handling (ofproto-dpif.at:1928): ok     (0m0.088s 0m0.248s)
716. ofproto-dpif - mirroring, select_src (ofproto-dpif.at:2420): ok     (0m0.020s 0m0.052s)
717. ofproto-dpif - mirroring, OFPP_NONE ingress port (ofproto-dpif.at:2448): ok     (0m0.020s 0m0.036s)
718. ofproto-dpif - mirroring, select_dst (ofproto-dpif.at:2469): ok     (0m0.008s 0m0.064s)
706. ofproto-dpif - controller (ofproto-dpif.at:1043): ok     (0m0.092s 0m0.328s)
719. ofproto-dpif - mirroring, select_vlan (ofproto-dpif.at:2499): ok     (0m0.016s 0m0.048s)
710. ofproto-dpif - VLAN handling (ofproto-dpif.at:1677): ok     (0m0.236s 0m0.640s)
720. ofproto-dpif - mirroring, output_port (ofproto-dpif.at:2534): ok     (0m0.032s 0m0.044s)
721. ofproto-dpif - mirroring, output_vlan (ofproto-dpif.at:2563): ok     (0m0.020s 0m0.044s)
724. ofproto-dpif - ofproto/trace-packet-out (ofproto-dpif.at:2858): ok     (0m0.016s 0m0.032s)
722. ofproto-dpif - ofproto/trace command 1 (ofproto-dpif.at:2601): ok     (0m0.056s 0m0.116s)
723. ofproto-dpif - ofproto/trace command 2 (ofproto-dpif.at:2742): ok     (0m0.052s 0m0.104s)
725. ofproto-dpif - MAC learning (ofproto-dpif.at:2888): ok     (0m0.048s 0m0.152s)
726. ofproto-dpif - MAC table overflow (ofproto-dpif.at:2977): ok     (0m0.060s 0m0.172s)
729. ofproto-dpif - NetFlow flow expiration - IPv4 collector (ofproto-dpif.at:3386): ok     (0m0.024s 0m0.048s)
727. ofproto-dpif - sFlow packet sampling - IPv4 collector (ofproto-dpif.at:3335): ok     (0m0.048s 0m0.128s)
730. ofproto-dpif - NetFlow flow expiration - IPv6 collector (ofproto-dpif.at:3387): ok     (0m0.012s 0m0.048s)
728. ofproto-dpif - sFlow packet sampling - IPv6 collector (ofproto-dpif.at:3336): ok     (0m0.088s 0m0.120s)
734. ofproto-dpif - flow stats, set-n-threads (ofproto-dpif.at:3495): ok     (0m0.036s 0m0.112s)
733. ofproto-dpif - flow stats (ofproto-dpif.at:3473): ok     (0m0.032s 0m0.112s)
735. idle_age and hard_age increase over time (ofproto-dpif.at:3518): ok     (0m0.024s 0m0.056s)
737. ofproto-dpif - ovs-appctl dpif/dump-dps (ofproto-dpif.at:3648): ok     (0m0.008s 0m0.020s)
738. ofproto-dpif - ovs-appctl dpif/show (ofproto-dpif.at:3660): ok     (0m0.008s 0m0.036s)
736. ofproto-dpif - fin_timeout (ofproto-dpif.at:3610): ok     (0m0.016s 0m0.052s)
731. ofproto-dpif - NetFlow active expiration - IPv4 collector (ofproto-dpif.at:3470): ok     (0m0.192s 0m0.380s)
739. ofproto-dpif - ovs-appctl dpif/dump-flows (ofproto-dpif.at:3678): ok     (0m0.128s 0m0.292s)
732. ofproto-dpif - NetFlow active expiration - IPv6 collector (ofproto-dpif.at:3471): ok     (0m0.120s 0m0.404s)
743. ofproto-dpif - port duration (ofproto-dpif.at:3857): ok     (0m0.008s 0m0.028s)
740. ofproto-dpif - MPLS actions that result in a userspace action (ofproto-dpif.at:3709): ok     (0m0.064s 0m0.192s)
741. ofproto-dpif - MPLS actions that result in a drop (ofproto-dpif.at:3746): ok     (0m0.088s 0m0.188s)
744. ofproto-dpif megaflow - port classification (ofproto-dpif.at:3877): ok     (0m0.012s 0m0.076s)
746. ofproto-dpif megaflow - L3 classification (ofproto-dpif.at:3912): ok     (0m0.036s 0m0.144s)
745. ofproto-dpif megaflow - L2 classification (ofproto-dpif.at:3894): ok     (0m0.060s 0m0.108s)
742. ofproto-dpif - patch ports (ofproto-dpif.at:3785): ok     (0m0.076s 0m0.236s)
748. ofproto-dpif megaflow - L4 classification (ofproto-dpif.at:3950): ok     (0m0.032s 0m0.088s)
747. ofproto-dpif megaflow - IPv6 classification (ofproto-dpif.at:3931): ok     (0m0.056s 0m0.092s)
749. ofproto-dpif megaflow - normal (ofproto-dpif.at:3966): ok     (0m0.020s 0m0.080s)
750. ofproto-dpif megaflow - mpls (ofproto-dpif.at:3981): ok     (0m0.044s 0m0.084s)
751. ofproto-dpif megaflow - netflow - IPv4 collector (ofproto-dpif.at:4030): ok     (0m0.032s 0m0.108s)
752. ofproto-dpif megaflow - netflow - IPv6 collector (ofproto-dpif.at:4031): ok     (0m0.064s 0m0.084s)
755. ofproto-dpif megaflow - normal, balance-tcp bonding (ofproto-dpif.at:4075): ok     (0m0.028s 0m0.096s)
753. ofproto-dpif megaflow - normal, active-backup bonding (ofproto-dpif.at:4033): ok     (0m0.028s 0m0.072s)
754. ofproto-dpif megaflow - normal, balance-slb bonding (ofproto-dpif.at:4054): ok     (0m0.020s 0m0.100s)
756. ofproto-dpif megaflow - resubmit port action (ofproto-dpif.at:4113): ok     (0m0.028s 0m0.076s)
757. ofproto-dpif megaflow - resubmit table action (ofproto-dpif.at:4132): ok     (0m0.032s 0m0.056s)
758. ofproto-dpif megaflow - goto_table action (ofproto-dpif.at:4152): ok     (0m0.016s 0m0.084s)
759. ofproto-dpif megaflow - mirroring, select_all (ofproto-dpif.at:4171): ok     (0m0.064s 0m0.076s)
760. ofproto-dpif megaflow - mirroring, select_vlan (ofproto-dpif.at:4193): ok     (0m0.032s 0m0.100s)
761. ofproto-dpif megaflow - move action (ofproto-dpif.at:4216): ok     (0m0.036s 0m0.084s)
762. ofproto-dpif megaflow - push action (ofproto-dpif.at:4236): ok     (0m0.012s 0m0.092s)
763. ofproto-dpif megaflow - learning (ofproto-dpif.at:4254): ok     (0m0.036s 0m0.088s)
764. ofproto-dpif megaflow - tunnels (ofproto-dpif.at:4281): ok     (0m0.068s 0m0.092s)
765. ofproto-dpif megaflow - dec_ttl (ofproto-dpif.at:4312): ok     (0m0.032s 0m0.076s)
768. ofproto-dpif - datapath port number change (ofproto-dpif.at:4389): ok     (0m0.008s 0m0.024s)
766. ofproto-dpif megaflow - set dl_dst (ofproto-dpif.at:4331): ok     (0m0.040s 0m0.080s)
770. ofproto-dpif - ofproto-dpif-monitor 1 (ofproto-dpif.at:4489): ok     (0m0.008s 0m0.076s)
767. ofproto-dpif megaflow - disabled (ofproto-dpif.at:4359): ok     (0m0.084s 0m0.168s)
772. ofproto-dpif - infinite resubmit (ofproto-dpif.at:4561): ok     (0m0.016s 0m0.032s)
769. ofproto - bundle with variable bfd/cfm config (ofproto-dpif.at:4411): ok     (0m0.264s 0m0.556s)
775. ofproto-dpif - stack too deep (ofproto-dpif.at:4607): ok     (0m0.104s 0m0.052s)
776. VLAN splinters (vlan-splinters.at:3): ok     (0m0.036s 0m0.032s)
777. create empty, reread (ovsdb-log.at:3): ok     (0m0.000s 0m0.012s)
778. write one, reread (ovsdb-log.at:18): ok     (0m0.008s 0m0.000s)
779. check that create fails if file exists (ovsdb-log.at:35): ok     (0m0.008s 0m0.004s)
780. write one, reread (ovsdb-log.at:55): ok     (0m0.000s 0m0.008s)
781. write one, reread, append (ovsdb-log.at:76): ok     (0m0.004s 0m0.008s)
782. write, reread one, overwrite (ovsdb-log.at:106): ok     (0m0.004s 0m0.008s)
783. write, add corrupted data, read (ovsdb-log.at:132): ok     (0m0.004s 0m0.004s)
784. write, add corrupted data, read, overwrite (ovsdb-log.at:154): ok     (0m0.016s 0m0.000s)
785. write, corrupt some data, read, overwrite (ovsdb-log.at:186): ok     (0m0.000s 0m0.028s)
774. ofproto-dpif - too many output actions (ofproto-dpif.at:4589): ok     (0m1.204s 0m0.780s)
773. ofproto-dpif - exponential resubmit chain (ofproto-dpif.at:4574): ok     (0m1.204s 0m0.824s)
788. integer - C (ovsdb-types.at:3): ok     (0m0.000s 0m0.000s)
786. write, truncate file, read, overwrite (ovsdb-log.at:219): ok     (0m0.000s 0m0.016s)
790. real - C (ovsdb-types.at:5): ok     (0m0.000s 0m0.008s)
787. write bad JSON, read, overwrite (ovsdb-log.at:252): ok     (0m0.000s 0m0.016s)
792. boolean - C (ovsdb-types.at:7): ok     (0m0.004s 0m0.000s)
789. integer - Python (ovsdb-types.at:3): ok     (0m0.500s 0m0.104s)
791. real - Python (ovsdb-types.at:5): ok     (0m0.464s 0m0.132s)
794. string - C (ovsdb-types.at:9): ok     (0m0.004s 0m0.004s)
793. boolean - Python (ovsdb-types.at:7): ok     (0m0.468s 0m0.120s)
796. uuid - C (ovsdb-types.at:11): ok     (0m0.000s 0m0.004s)
798. void is not a valid atomic-type - C (ovsdb-types.at:13): ok     (0m0.004s 0m0.000s)
795. string - Python (ovsdb-types.at:9): ok     (0m0.444s 0m0.140s)
800. integer enum - C (ovsdb-types.at:18): ok     (0m0.000s 0m0.008s)
797. uuid - Python (ovsdb-types.at:11): ok     (0m0.488s 0m0.112s)
802. integer >= 5 - C (ovsdb-types.at:21): ok     (0m0.000s 0m0.008s)
799. void is not a valid atomic-type - Python (ovsdb-types.at:13): ok     (0m0.464s 0m0.136s)
804. integer <= 7 - C (ovsdb-types.at:24): ok     (0m0.000s 0m0.004s)
801. integer enum - Python (ovsdb-types.at:18): ok     (0m0.452s 0m0.148s)
806. integer between -5 and 10 - C (ovsdb-types.at:27): ok     (0m0.000s 0m0.008s)
803. integer >= 5 - Python (ovsdb-types.at:21): ok     (0m0.468s 0m0.120s)
808. integer max may not be less than min - C (ovsdb-types.at:30): ok     (0m0.004s 0m0.000s)
805. integer <= 7 - Python (ovsdb-types.at:24): ok     (0m0.448s 0m0.136s)
810. real enum - C (ovsdb-types.at:34): ok     (0m0.004s 0m0.000s)
807. integer between -5 and 10 - Python (ovsdb-types.at:27): ok     (0m0.452s 0m0.164s)
809. integer max may not be less than min - Python (ovsdb-types.at:30): ok     (0m0.440s 0m0.152s)
812. real >= -1.5 - C (ovsdb-types.at:37): ok     (0m0.004s 0m0.000s)
814. real <= 1e5 - C (ovsdb-types.at:40): ok     (0m0.000s 0m0.004s)
811. real enum - Python (ovsdb-types.at:34): ok     (0m0.432s 0m0.144s)
816. real between -2.5 and 3.75 - C (ovsdb-types.at:43): ok     (0m0.000s 0m0.004s)
815. real <= 1e5 - Python (ovsdb-types.at:40): ok     (0m0.448s 0m0.104s)
813. real >= -1.5 - Python (ovsdb-types.at:37): ok     (0m0.484s 0m0.128s)
817. real between -2.5 and 3.75 - Python (ovsdb-types.at:43): ok     (0m0.436s 0m0.104s)
818. real max may not be less than min - C (ovsdb-types.at:46): ok     (0m0.000s 0m0.004s)
820. boolean - C (ovsdb-types.at:50): ok     (0m0.000s 0m0.004s)
822. boolean enum - C (ovsdb-types.at:52): ok     (0m0.000s 0m0.004s)
819. real max may not be less than min - Python (ovsdb-types.at:46): ok     (0m0.448s 0m0.148s)
824. string enum - C (ovsdb-types.at:56): ok     (0m0.004s 0m0.004s)
821. boolean - Python (ovsdb-types.at:50): ok     (0m0.480s 0m0.108s)
826. string minLength - C (ovsdb-types.at:59): ok     (0m0.004s 0m0.004s)
823. boolean enum - Python (ovsdb-types.at:52): ok     (0m0.456s 0m0.148s)
828. string maxLength - C (ovsdb-types.at:62): ok     (0m0.000s 0m0.008s)
825. string enum - Python (ovsdb-types.at:56): ok     (0m0.472s 0m0.128s)
830. string minLength and maxLength - C (ovsdb-types.at:65): ok     (0m0.000s 0m0.008s)
827. string minLength - Python (ovsdb-types.at:59): ok     (0m0.476s 0m0.132s)
832. maxLength must not be less than minLength - C (ovsdb-types.at:68): ok     (0m0.000s 0m0.004s)
829. string maxLength - Python (ovsdb-types.at:62): ok     (0m0.440s 0m0.132s)
834. maxLength must not be negative - C (ovsdb-types.at:71): ok     (0m0.004s 0m0.000s)
831. string minLength and maxLength - Python (ovsdb-types.at:65): ok     (0m0.476s 0m0.124s)
836. uuid enum - C (ovsdb-types.at:75): ok     (0m0.000s 0m0.000s)
833. maxLength must not be less than minLength - Python (ovsdb-types.at:68): ok     (0m0.488s 0m0.128s)
835. maxLength must not be negative - Python (ovsdb-types.at:71): ok     (0m0.440s 0m0.148s)
838. uuid refTable - C (ovsdb-types.at:78): ok     (0m0.004s 0m0.004s)
840. uuid refTable must be valid id - C (ovsdb-types.at:81): ok     (0m0.004s 0m0.000s)
837. uuid enum - Python (ovsdb-types.at:75): ok     (0m0.476s 0m0.132s)
842. void is not a valid base-type - C (ovsdb-types.at:85): ok     (0m0.000s 0m0.004s)
839. uuid refTable - Python (ovsdb-types.at:78): ok     (0m0.472s 0m0.116s)
844. "type" member must be present - C (ovsdb-types.at:87): ok     (0m0.000s 0m0.004s)
841. uuid refTable must be valid id - Python (ovsdb-types.at:81): ok     (0m0.440s 0m0.132s)
846. simple integer - C (ovsdb-types.at:92): ok     (0m0.000s 0m0.004s)
843. void is not a valid base-type - Python (ovsdb-types.at:85): ok     (0m0.424s 0m0.148s)
848. simple real - C (ovsdb-types.at:94): ok     (0m0.000s 0m0.004s)
845. "type" member must be present - Python (ovsdb-types.at:87): ok     (0m0.424s 0m0.160s)
850. simple boolean - C (ovsdb-types.at:96): ok     (0m0.000s 0m0.008s)
847. simple integer - Python (ovsdb-types.at:92): ok     (0m0.468s 0m0.136s)
852. simple string - C (ovsdb-types.at:98): ok     (0m0.000s 0m0.004s)
849. simple real - Python (ovsdb-types.at:94): ok     (0m0.468s 0m0.140s)
854. simple uuid - C (ovsdb-types.at:100): ok     (0m0.000s 0m0.008s)
851. simple boolean - Python (ovsdb-types.at:96): ok     (0m0.484s 0m0.124s)
853. simple string - Python (ovsdb-types.at:98): ok     (0m0.460s 0m0.132s)
856. integer in object - C (ovsdb-types.at:102): ok     (0m0.000s 0m0.004s)
858. real in object with explicit min and max - C (ovsdb-types.at:104): ok     (0m0.004s 0m0.000s)
855. simple uuid - Python (ovsdb-types.at:100): ok     (0m0.472s 0m0.140s)
771. ofproto-dpif - ofproto-dpif-monitor 2 (ofproto-dpif.at:4548): ok     (0m3.608s 0m1.464s)
860. key type is required - C (ovsdb-types.at:107): ok     (0m0.000s 0m0.004s)
857. integer in object - Python (ovsdb-types.at:102): ok     (0m0.484s 0m0.120s)
862. void is not a valid type - C (ovsdb-types.at:109): ok     (0m0.000s 0m0.004s)
864. optional boolean - C (ovsdb-types.at:114): ok     (0m0.004s 0m0.000s)
859. real in object with explicit min and max - Python (ovsdb-types.at:104): ok     (0m0.472s 0m0.132s)
866. set of 1 to 3 uuids - C (ovsdb-types.at:118): ok     (0m0.004s 0m0.000s)
861. key type is required - Python (ovsdb-types.at:107): ok     (0m0.480s 0m0.132s)
868. set of 0 to 3 strings - C (ovsdb-types.at:121): ok     (0m0.004s 0m0.004s)
863. void is not a valid type - Python (ovsdb-types.at:109): ok     (0m0.484s 0m0.152s)
865. optional boolean - Python (ovsdb-types.at:114): ok     (0m0.452s 0m0.136s)
870. set of 0 or more integers - C (ovsdb-types.at:124): ok     (0m0.000s 0m0.004s)
872. set of 1 or more reals - C (ovsdb-types.at:127): ok     (0m0.000s 0m0.004s)
867. set of 1 to 3 uuids - Python (ovsdb-types.at:118): ok     (0m0.468s 0m0.124s)
874. set max cannot be less than min - C (ovsdb-types.at:131): ok     (0m0.000s 0m0.004s)
869. set of 0 to 3 strings - Python (ovsdb-types.at:121): ok     (0m0.496s 0m0.104s)
876. set max cannot be negative - C (ovsdb-types.at:134): ok     (0m0.000s 0m0.004s)
871. set of 0 or more integers - Python (ovsdb-types.at:124): ok     (0m0.448s 0m0.152s)
878. set min cannot be negative - C (ovsdb-types.at:137): ok     (0m0.000s 0m0.004s)
873. set of 1 or more reals - Python (ovsdb-types.at:127): ok     (0m0.488s 0m0.120s)
880. set min cannot be greater than one - C (ovsdb-types.at:140): ok     (0m0.000s 0m0.004s)
875. set max cannot be less than min - Python (ovsdb-types.at:131): ok     (0m0.496s 0m0.112s)
882. map of 1 integer to boolean - C (ovsdb-types.at:146): ok     (0m0.000s 0m0.004s)
877. set max cannot be negative - Python (ovsdb-types.at:134): ok     (0m0.448s 0m0.160s)
884. map of 1 boolean to integer, explicit min and max - C (ovsdb-types.at:149): ok     (0m0.004s 0m0.004s)
879. set min cannot be negative - Python (ovsdb-types.at:137): ok     (0m0.484s 0m0.140s)
886. map of 1 to 5 uuid to real - C (ovsdb-types.at:152): ok     (0m0.000s 0m0.004s)
881. set min cannot be greater than one - Python (ovsdb-types.at:140): ok     (0m0.492s 0m0.112s)
883. map of 1 integer to boolean - Python (ovsdb-types.at:146): ok     (0m0.448s 0m0.120s)
888. map of 0 to 10 string to uuid - C (ovsdb-types.at:155): ok     (0m0.000s 0m0.008s)
890. map of 1 to 20 real to string - C (ovsdb-types.at:158): ok     (0m0.000s 0m0.004s)
885. map of 1 boolean to integer, explicit min and max - Python (ovsdb-types.at:149): ok     (0m0.412s 0m0.164s)
892. map of 0 or more string to real - C (ovsdb-types.at:161): ok     (0m0.000s 0m0.008s)
887. map of 1 to 5 uuid to real - Python (ovsdb-types.at:152): ok     (0m0.524s 0m0.092s)
889. map of 0 to 10 string to uuid - Python (ovsdb-types.at:155): ok     (0m0.512s 0m0.120s)
894. map key type is required - C (ovsdb-types.at:165): ok     (0m0.000s 0m0.004s)
896. default atoms - C (ovsdb-data.at:3): ok     (0m0.004s 0m0.004s)
891. map of 1 to 20 real to string - Python (ovsdb-types.at:158): ok     (0m0.448s 0m0.160s)
898. default data - C (ovsdb-data.at:11): ok     (0m0.000s 0m0.004s)
893. map of 0 or more string to real - Python (ovsdb-types.at:161): ok     (0m0.492s 0m0.112s)
900. integer atom from JSON - C (ovsdb-data.at:76): ok     (0m0.000s 0m0.008s)
895. map key type is required - Python (ovsdb-types.at:165): ok     (0m0.468s 0m0.112s)
902. integer atom from string (ovsdb-data.at:89): ok     (0m0.000s 0m0.004s)
897. default atoms - Python (ovsdb-data.at:3): ok     (0m0.456s 0m0.164s)
903. real atom from JSON - C (ovsdb-data.at:102): ok     (0m0.004s 0m0.004s)
899. default data - Python (ovsdb-data.at:11): ok     (0m0.488s 0m0.120s)
905. real atom from string (ovsdb-data.at:119): ok     (0m0.004s 0m0.004s)
906. boolean atom from JSON - C (ovsdb-data.at:136): ok     (0m0.000s 0m0.008s)
908. boolean atom from string (ovsdb-data.at:141): ok     (0m0.004s 0m0.004s)
901. integer atom from JSON - Python (ovsdb-data.at:76): ok     (0m0.476s 0m0.088s)
909. string atom from JSON - C (ovsdb-data.at:146): ok     (0m0.000s 0m0.008s)
911. string atom from string (ovsdb-data.at:152): ok     (0m0.000s 0m0.004s)
912. uuid atom from JSON - C (ovsdb-data.at:167): ok     (0m0.000s 0m0.008s)
904. real atom from JSON - Python (ovsdb-data.at:102): ok     (0m0.412s 0m0.172s)
914. uuid atom from string (ovsdb-data.at:171): ok     (0m0.000s 0m0.008s)
907. boolean atom from JSON - Python (ovsdb-data.at:136): ok     (0m0.512s 0m0.100s)
915. integer atom sorting - C (ovsdb-data.at:175): ok     (0m0.000s 0m0.004s)
910. string atom from JSON - Python (ovsdb-data.at:146): ok     (0m0.496s 0m0.100s)
917. real atom sorting - C (ovsdb-data.at:179): ok     (0m0.000s 0m0.004s)
919. boolean atom sorting - C (ovsdb-data.at:183): ok     (0m0.000s 0m0.008s)
913. uuid atom from JSON - Python (ovsdb-data.at:167): ok     (0m0.440s 0m0.136s)
921. string atom sorting - C (ovsdb-data.at:187): ok     (0m0.004s 0m0.000s)
916. integer atom sorting - Python (ovsdb-data.at:175): ok     (0m0.496s 0m0.132s)
923. uuid atom sorting - C (ovsdb-data.at:191): ok     (0m0.000s 0m0.004s)
918. real atom sorting - Python (ovsdb-data.at:179): ok     (0m0.496s 0m0.132s)
920. boolean atom sorting - Python (ovsdb-data.at:183): ok     (0m0.492s 0m0.112s)
925. real not acceptable integer JSON atom - C (ovsdb-data.at:228): ok     (0m0.000s 0m0.004s)
927. no invalid UTF-8 sequences in strings (ovsdb-data.at:234): ok     (0m0.000s 0m0.004s)
922. string atom sorting - Python (ovsdb-data.at:187): ok     (0m0.452s 0m0.140s)
929. real not acceptable integer string atom (ovsdb-data.at:257): ok     (0m0.000s 0m0.000s)
930. string "true" not acceptable boolean JSON atom - C (ovsdb-data.at:261): ok     (0m0.000s 0m0.008s)
924. uuid atom sorting - Python (ovsdb-data.at:191): ok     (0m0.524s 0m0.160s)
926. real not acceptable integer JSON atom - Python (ovsdb-data.at:228): ok     (0m0.448s 0m0.132s)
933. integer not acceptable string JSON atom - C (ovsdb-data.at:269): ok     (0m0.000s 0m0.008s)
932. string "true" not acceptable boolean string atom (ovsdb-data.at:265): ok     (0m0.004s 0m0.000s)
928. no invalid UTF-8 sequences in strings - Python (ovsdb-data.at:249): ok     (0m0.488s 0m0.128s)
935. uuid atom must be expressed as JSON array - C (ovsdb-data.at:273): ok     (0m0.000s 0m0.008s)
937. named-uuid requires symbol table - C (ovsdb-data.at:277): ok     (0m0.000s 0m0.008s)
931. string "true" not acceptable boolean JSON atom - Python (ovsdb-data.at:261): ok     (0m0.448s 0m0.152s)
939. empty string atom must be quoted (ovsdb-data.at:281): ok     (0m0.000s 0m0.004s)
934. integer not acceptable string JSON atom - Python (ovsdb-data.at:269): ok     (0m0.484s 0m0.132s)
940. quotes must be balanced (ovsdb-data.at:285): ok     (0m0.000s 0m0.004s)
936. uuid atom must be expressed as JSON array - Python (ovsdb-data.at:273): ok     (0m0.484s 0m0.144s)
942. integer atom enum - C (ovsdb-data.at:295): ok     (0m0.000s 0m0.004s)
941. uuids must be valid (ovsdb-data.at:289): ok     (0m0.000s 0m0.000s)
938. named-uuid requires symbol table - Python (ovsdb-data.at:277): ok     (0m0.472s 0m0.152s)
944. real atom enum - C (ovsdb-data.at:318): ok     (0m0.000s 0m0.004s)
946. boolean atom enum - C (ovsdb-data.at:335): ok     (0m0.000s 0m0.004s)
948. string atom enum - C (ovsdb-data.at:342): ok     (0m0.000s 0m0.008s)
943. integer atom enum - Python (ovsdb-data.at:295): ok     (0m0.460s 0m0.144s)
945. real atom enum - Python (ovsdb-data.at:318): ok     (0m0.464s 0m0.160s)
950. uuid atom enum - C (ovsdb-data.at:357): ok     (0m0.004s 0m0.000s)
947. boolean atom enum - Python (ovsdb-data.at:335): ok     (0m0.460s 0m0.124s)
952. integers >= 5 - C (ovsdb-data.at:368): ok     (0m0.000s 0m0.004s)
954. integers <= -1 - C (ovsdb-data.at:381): ok     (0m0.000s 0m0.004s)
949. string atom enum - Python (ovsdb-data.at:342): ok     (0m0.512s 0m0.104s)
956. integers in range -10 to 10 - C (ovsdb-data.at:392): ok     (0m0.004s 0m0.000s)
951. uuid atom enum - Python (ovsdb-data.at:357): ok     (0m0.496s 0m0.128s)
953. integers >= 5 - Python (ovsdb-data.at:368): ok     (0m0.508s 0m0.116s)
958. reals >= 5 - C (ovsdb-data.at:413): ok     (0m0.004s 0m0.000s)
960. reals <= -1 - C (ovsdb-data.at:426): ok     (0m0.008s 0m0.000s)
955. integers <= -1 - Python (ovsdb-data.at:381): ok     (0m0.488s 0m0.148s)
957. integers in range -10 to 10 - Python (ovsdb-data.at:392): ok     (0m0.504s 0m0.108s)
962. reals in range -10 to 10 - C (ovsdb-data.at:437): ok     (0m0.004s 0m0.000s)
964. strings at least 2 characters long - C (ovsdb-data.at:458): ok     (0m0.004s 0m0.000s)
959. reals >= 5 - Python (ovsdb-data.at:413): ok     (0m0.484s 0m0.128s)
961. reals <= -1 - Python (ovsdb-data.at:426): ok     (0m0.452s 0m0.124s)
966. strings no more than 2 characters long - C (ovsdb-data.at:476): ok     (0m0.004s 0m0.000s)
968. integer JSON datum - C (ovsdb-data.at:491): ok     (0m0.000s 0m0.008s)
963. reals in range -10 to 10 - Python (ovsdb-data.at:437): ok     (0m0.492s 0m0.116s)
970. integer string datum (ovsdb-data.at:497): ok     (0m0.000s 0m0.004s)
971. real JSON datum - C (ovsdb-data.at:504): ok     (0m0.000s 0m0.004s)
965. strings at least 2 characters long - Python (ovsdb-data.at:458): ok     (0m0.580s 0m0.140s)
973. real string datum (ovsdb-data.at:510): ok     (0m0.000s 0m0.004s)
974. boolean JSON datum - C (ovsdb-data.at:516): ok     (0m0.000s 0m0.000s)
967. strings no more than 2 characters long - Python (ovsdb-data.at:476): ok     (0m0.460s 0m0.128s)
969. integer JSON datum - Python (ovsdb-data.at:491): ok     (0m0.496s 0m0.112s)
976. boolean string datum (ovsdb-data.at:521): ok     (0m0.000s 0m0.004s)
977. string JSON datum - C (ovsdb-data.at:526): ok     (0m0.000s 0m0.004s)
979. string string datum (ovsdb-data.at:532): ok     (0m0.004s 0m0.000s)
972. real JSON datum - Python (ovsdb-data.at:504): ok     (0m0.508s 0m0.104s)
980. JSON optional boolean - C (ovsdb-data.at:541): ok     (0m0.000s 0m0.004s)
982. string optional boolean (ovsdb-data.at:551): ok     (0m0.000s 0m0.004s)
983. JSON set of 0 or more integers - C (ovsdb-data.at:561): ok     (0m0.000s 0m0.004s)
975. boolean JSON datum - Python (ovsdb-data.at:516): ok     (0m0.476s 0m0.132s)
978. string JSON datum - Python (ovsdb-data.at:526): ok     (0m0.472s 0m0.108s)
985. string set of 0 or more integers (ovsdb-data.at:578): ok     (0m0.000s 0m0.008s)
986. JSON set of 1 to 3 uuids - C (ovsdb-data.at:593): ok     (0m0.000s 0m0.004s)
988. string set of 1 to 3 uuids (ovsdb-data.at:604): ok     (0m0.000s 0m0.008s)
989. JSON set of 0 to 3 strings - C (ovsdb-data.at:613): ok     (0m0.004s 0m0.004s)
981. JSON optional boolean - Python (ovsdb-data.at:541): ok     (0m0.484s 0m0.144s)
991. string set of 0 to 3 strings (ovsdb-data.at:626): ok     (0m0.000s 0m0.000s)
984. JSON set of 0 or more integers - Python (ovsdb-data.at:561): ok     (0m0.496s 0m0.112s)
992. duplicate boolean not allowed in JSON set - C (ovsdb-data.at:637): ok     (0m0.000s 0m0.004s)
987. JSON set of 1 to 3 uuids - Python (ovsdb-data.at:593): ok     (0m0.456s 0m0.144s)
994. duplicate boolean not allowed in string set (ovsdb-data.at:641): ok     (0m0.000s 0m0.004s)
995. duplicate integer not allowed in JSON set - C (ovsdb-data.at:645): ok     (0m0.000s 0m0.004s)
997. duplicate integer not allowed in string set (ovsdb-data.at:649): ok     (0m0.004s 0m0.000s)
990. JSON set of 0 to 3 strings - Python (ovsdb-data.at:613): ok     (0m0.488s 0m0.116s)
998. duplicate real not allowed in JSON set - C (ovsdb-data.at:653): ok     (0m0.000s 0m0.004s)
1000. duplicate real not allowed in string set (ovsdb-data.at:657): ok     (0m0.008s 0m0.000s)
993. duplicate boolean not allowed in JSON set - Python (ovsdb-data.at:637): ok     (0m0.420s 0m0.152s)
1001. duplicate string not allowed in JSON set - C (ovsdb-data.at:661): ok     (0m0.000s 0m0.004s)
996. duplicate integer not allowed in JSON set - Python (ovsdb-data.at:645): ok     (0m0.440s 0m0.132s)
1003. duplicate string not allowed in string set (ovsdb-data.at:665): ok     (0m0.004s 0m0.000s)
1004. duplicate uuid not allowed in JSON set - C (ovsdb-data.at:669): ok     (0m0.000s 0m0.000s)
1006. duplicate uuid not allowed in string set (ovsdb-data.at:676): ok     (0m0.004s 0m0.000s)
999. duplicate real not allowed in JSON set - Python (ovsdb-data.at:653): ok     (0m0.496s 0m0.096s)
1007. JSON map of 1 integer to boolean - C (ovsdb-data.at:685): ok     (0m0.000s 0m0.004s)
1009. string map of 1 integer to boolean (ovsdb-data.at:690): ok     (0m0.000s 0m0.008s)
1002. duplicate string not allowed in JSON set - Python (ovsdb-data.at:661): ok     (0m0.464s 0m0.124s)
1010. JSON map of at least 1 integer to boolean - C (ovsdb-data.at:695): ok     (0m0.004s 0m0.000s)
1012. string map of at least 1 integer to boolean (ovsdb-data.at:704): ok     (0m0.000s 0m0.008s)
1013. JSON map of 1 boolean to integer - C (ovsdb-data.at:713): ok     (0m0.000s 0m0.004s)
1005. duplicate uuid not allowed in JSON set - Python (ovsdb-data.at:669): ok     (0m0.484s 0m0.116s)
1015. string map of 1 boolean to integer (ovsdb-data.at:718): ok     (0m0.004s 0m0.004s)
1008. JSON map of 1 integer to boolean - Python (ovsdb-data.at:685): ok     (0m0.484s 0m0.104s)
1016. JSON map of 1 uuid to real - C (ovsdb-data.at:723): ok     (0m0.000s 0m0.004s)
1018. string map of 1 uuid to real (ovsdb-data.at:732): ok     (0m0.000s 0m0.008s)
1011. JSON map of at least 1 integer to boolean - Python (ovsdb-data.at:695): ok     (0m0.484s 0m0.112s)
1019. JSON map of 10 string to string - C (ovsdb-data.at:741): ok     (0m0.004s 0m0.004s)
1021. string map of 10 string to string (ovsdb-data.at:755): ok     (0m0.000s 0m0.004s)
1014. JSON map of 1 boolean to integer - Python (ovsdb-data.at:713): ok     (0m0.448s 0m0.136s)
1022. duplicate integer key not allowed in JSON map - C (ovsdb-data.at:769): ok     (0m0.000s 0m0.004s)
1024. duplicate integer key not allowed in string map (ovsdb-data.at:774): ok     (0m0.004s 0m0.000s)
1017. JSON map of 1 uuid to real - Python (ovsdb-data.at:723): ok     (0m0.456s 0m0.148s)
1025. ordinary column - C (ovsdb-column.at:3): ok     (0m0.004s 0m0.000s)
1027. immutable column - C (ovsdb-column.at:7): ok     (0m0.004s 0m0.004s)
1020. JSON map of 10 string to string - Python (ovsdb-data.at:741): ok     (0m0.500s 0m0.108s)
1029. ephemeral column - C (ovsdb-column.at:11): ok     (0m0.004s 0m0.000s)
1023. duplicate integer key not allowed in JSON map - Python (ovsdb-data.at:769): ok     (0m0.432s 0m0.116s)
1026. ordinary column - Python (ovsdb-column.at:3): ok     (0m0.416s 0m0.132s)
1031. non-root table with one column - C (ovsdb-table.at:3): ok     (0m0.000s 0m0.008s)
1033. immutable table with one column - C (ovsdb-table.at:7): ok     (0m0.004s 0m0.000s)
1028. immutable column - Python (ovsdb-column.at:7): ok     (0m0.480s 0m0.140s)
1030. ephemeral column - Python (ovsdb-column.at:11): ok     (0m0.440s 0m0.172s)
1035. root table with one column - C (ovsdb-table.at:13): ok     (0m0.000s 0m0.004s)
1037. non-root table with default_is_root=true - C (ovsdb-table.at:19): ok     (0m0.000s 0m0.004s)
1032. non-root table with one column - Python (ovsdb-table.at:3): ok     (0m0.472s 0m0.160s)
1034. immutable table with one column - Python (ovsdb-table.at:7): ok     (0m0.500s 0m0.116s)
1039. root table with default_is_root=true - C (ovsdb-table.at:23): ok     (0m0.000s 0m0.004s)
1041. table with maxRows of 2 - C (ovsdb-table.at:29): ok     (0m0.004s 0m0.000s)
1036. root table with one column - Python (ovsdb-table.at:13): ok     (0m0.472s 0m0.140s)
1043. table with index - C (ovsdb-table.at:34): ok     (0m0.004s 0m0.004s)
1038. non-root table with default_is_root=true - Python (ovsdb-table.at:19): ok     (0m0.464s 0m0.124s)
1045. table with syntax error in index - C (ovsdb-table.at:40): ok     (0m0.000s 0m0.004s)
1040. root table with default_is_root=true - Python (ovsdb-table.at:23): ok     (0m0.440s 0m0.132s)
1042. table with maxRows of 2 - Python (ovsdb-table.at:29): ok     (0m0.480s 0m0.132s)
1047. table with empty index - C (ovsdb-table.at:46): ok     (0m0.000s 0m0.004s)
1049. table with index of ephemeral column - C (ovsdb-table.at:52): ok     (0m0.000s 0m0.004s)
1044. table with index - Python (ovsdb-table.at:34): ok     (0m0.476s 0m0.148s)
1051. column names may not begin with _ - C (ovsdb-table.at:59): ok     (0m0.000s 0m0.000s)
1046. table with syntax error in index - Python (ovsdb-table.at:40): ok     (0m0.468s 0m0.164s)
1053. table must have at least one column (1) - C (ovsdb-table.at:65): ok     (0m0.000s 0m0.004s)
1048. table with empty index - Python (ovsdb-table.at:46): ok     (0m0.484s 0m0.136s)
1055. table must have at least one column (2) - C (ovsdb-table.at:69): ok     (0m0.004s 0m0.000s)
1050. table with index of ephemeral column - Python (ovsdb-table.at:52): ok     (0m0.484s 0m0.152s)
1057. table maxRows must be positive - C (ovsdb-table.at:73): ok     (0m0.000s 0m0.004s)
1052. column names may not begin with _ - Python (ovsdb-table.at:59): ok     (0m0.488s 0m0.128s)
1059. row with one string column (ovsdb-row.at:5): ok     (0m0.004s 0m0.000s)
1054. table must have at least one column (1) - Python (ovsdb-table.at:65): ok     (0m0.460s 0m0.148s)
1060. row with one integer column (ovsdb-row.at:21): ok     (0m0.000s 0m0.004s)
1061. row with one real column (ovsdb-row.at:37): ok     (0m0.000s 0m0.004s)
1056. table must have at least one column (2) - Python (ovsdb-table.at:69): ok     (0m0.460s 0m0.144s)
1062. row with one boolean column (ovsdb-row.at:53): ok     (0m0.004s 0m0.004s)
1063. row with one uuid column (ovsdb-row.at:66): ok     (0m0.000s 0m0.004s)
1064. row with set of 1 to 2 elements (ovsdb-row.at:79): ok     (0m0.004s 0m0.000s)
1065. row with map of 1 to 2 elements (ovsdb-row.at:86): ok     (0m0.000s 0m0.008s)
1058. table maxRows must be positive - Python (ovsdb-table.at:73): ok     (0m0.432s 0m0.180s)
1066. row with several columns (ovsdb-row.at:93): ok     (0m0.004s 0m0.000s)
1067. row hashing (scalars) (ovsdb-row.at:115): ok     (0m0.000s 0m0.004s)
1068. row hashing (sets) (ovsdb-row.at:184): ok     (0m0.000s 0m0.008s)
1069. row hashing (maps) (ovsdb-row.at:237): ok     (0m0.004s 0m0.000s)
1070. schema with valid refTables - C (ovsdb-schema.at:3): ok     (0m0.004s 0m0.004s)
1072. schema with ephemeral strong references - C (ovsdb-schema.at:30): ok     (0m0.000s 0m0.004s)
1074. schema without version number - C (ovsdb-schema.at:61): ok     (0m0.000s 0m0.004s)
1076. schema with invalid refTables - C (ovsdb-schema.at:71): ok     (0m0.004s 0m0.000s)
1073. schema with ephemeral strong references - Python (ovsdb-schema.at:30): ok     (0m0.472s 0m0.116s)
1071. schema with valid refTables - Python (ovsdb-schema.at:3): ok     (0m0.508s 0m0.120s)
1075. schema without version number - Python (ovsdb-schema.at:61): ok     (0m0.512s 0m0.104s)
1078. schema with invalid version number - C (ovsdb-schema.at:94): ok     (0m0.000s 0m0.008s)
1080. null condition (ovsdb-condition.at:3): ok     (0m0.000s 0m0.000s)
1081. conditions on scalars (ovsdb-condition.at:9): ok     (0m0.000s 0m0.004s)
1082. disallowed conditions on scalars (ovsdb-condition.at:75): ok     (0m0.000s 0m0.004s)
1083. conditions on sets (ovsdb-condition.at:112): ok     (0m0.000s 0m0.004s)
1077. schema with invalid refTables - Python (ovsdb-schema.at:71): ok     (0m0.468s 0m0.148s)
1084. condition sorting (ovsdb-condition.at:173): ok     (0m0.004s 0m0.000s)
1085. evaluating null condition (ovsdb-condition.at:187): ok     (0m0.004s 0m0.000s)
1086. evaluating conditions on integers (ovsdb-condition.at:196): ok     (0m0.004s 0m0.000s)
1087. evaluating conditions on reals (ovsdb-condition.at:221): ok     (0m0.000s 0m0.000s)
1088. evaluating conditions on booleans (ovsdb-condition.at:246): ok     (0m0.000s 0m0.000s)
1089. evaluating conditions on strings (ovsdb-condition.at:270): ok     (0m0.000s 0m0.004s)
1090. evaluating conditions on UUIDs (ovsdb-condition.at:295): ok     (0m0.000s 0m0.004s)
1091. evaluating conditions on sets (ovsdb-condition.at:321): ok     (0m0.000s 0m0.004s)
1079. schema with invalid version number - Python (ovsdb-schema.at:94): ok     (0m0.500s 0m0.116s)
1092. evaluating conditions on maps (1) (ovsdb-condition.at:403): ok     (0m0.000s 0m0.004s)
1093. evaluating conditions on maps (2) (ovsdb-condition.at:488): ok     (0m0.000s 0m0.008s)
1094. null mutation (ovsdb-mutation.at:3): ok     (0m0.000s 0m0.000s)
1095. mutations on scalars (ovsdb-mutation.at:9): ok     (0m0.000s 0m0.004s)
1096. disallowed mutations on scalars (ovsdb-mutation.at:37): ok     (0m0.004s 0m0.000s)
1097. disallowed mutations on immutable columns (ovsdb-mutation.at:102): ok     (0m0.000s 0m0.004s)
1098. mutations on sets (ovsdb-mutation.at:114): ok     (0m0.000s 0m0.004s)
1099. executing null mutation (ovsdb-mutation.at:166): ok     (0m0.000s 0m0.008s)
1100. executing mutations on integers (ovsdb-mutation.at:179): ok     (0m0.004s 0m0.000s)
1101. integer overflow detection (ovsdb-mutation.at:216): ok     (0m0.004s 0m0.000s)
1102. executing mutations on integers with constraints (ovsdb-mutation.at:297): ok     (0m0.004s 0m0.000s)
1103. executing mutations on reals (ovsdb-mutation.at:336): ok     (0m0.000s 0m0.008s)
1104. real overflow detection (ovsdb-mutation.at:367): ok     (0m0.000s 0m0.008s)
1105. executing mutations on reals with constraints (ovsdb-mutation.at:410): ok     (0m0.004s 0m0.000s)
1106. executing mutations on integer sets (ovsdb-mutation.at:443): ok     (0m0.004s 0m0.000s)
1107. executing mutations on integer sets with constraints (ovsdb-mutation.at:517): ok     (0m0.000s 0m0.004s)
1108. executing mutations on real sets (ovsdb-mutation.at:556): ok     (0m0.000s 0m0.008s)
1109. executing mutations on boolean sets (ovsdb-mutation.at:629): ok     (0m0.000s 0m0.008s)
1110. executing mutations on string sets (ovsdb-mutation.at:679): ok     (0m0.000s 0m0.004s)
1111. executing mutations on uuid sets (ovsdb-mutation.at:729): ok     (0m0.000s 0m0.000s)
1112. executing mutations on integer maps (ovsdb-mutation.at:779): ok     (0m0.004s 0m0.000s)
1113. queries on scalars (ovsdb-query.at:3): ok     (0m0.000s 0m0.008s)
1114. queries on sets (ovsdb-query.at:95): ok     (0m0.000s 0m0.004s)
1115. queries on maps (1) (ovsdb-query.at:176): ok     (0m0.000s 0m0.004s)
1116. queries on maps (2) (ovsdb-query.at:260): ok     (0m0.004s 0m0.004s)
1117. UUID-distinct queries on scalars (ovsdb-query.at:351): ok     (0m0.000s 0m0.008s)
1118. Boolean-distinct queries on scalars (ovsdb-query.at:444): ok     (0m0.000s 0m0.004s)
1119. parse colunn set containing bad name (ovsdb-query.at:537): ok     (0m0.000s 0m0.004s)
1120. empty table, empty transaction (ovsdb-transaction.at:3): ok     (0m0.000s 0m0.008s)
1121. nonempty table, empty transaction (ovsdb-transaction.at:17): ok     (0m0.004s 0m0.004s)
1122. insert, commit (ovsdb-transaction.at:41): ok     (0m0.000s 0m0.004s)
1124. modify, commit (ovsdb-transaction.at:98): ok     (0m0.004s 0m0.000s)
1123. insert, abort (ovsdb-transaction.at:70): ok     (0m0.004s 0m0.004s)
1125. modify, abort (ovsdb-transaction.at:127): ok     (0m0.000s 0m0.004s)
1127. delete, abort (ovsdb-transaction.at:181): ok     (0m0.000s 0m0.004s)
1126. delete, commit (ovsdb-transaction.at:156): ok     (0m0.000s 0m0.004s)
1128. modify, delete, commit (ovsdb-transaction.at:207): ok     (0m0.004s 0m0.004s)
1129. modify, delete, abort (ovsdb-transaction.at:234): ok     (0m0.000s 0m0.008s)
1131. insert, delete, abort (ovsdb-transaction.at:291): ok     (0m0.000s 0m0.008s)
1130. insert, delete, commit (ovsdb-transaction.at:262): ok     (0m0.004s 0m0.004s)
1132. insert, modify, delete, commit (ovsdb-transaction.at:322): ok     (0m0.004s 0m0.004s)
1133. insert, modify, delete, abort (ovsdb-transaction.at:353): ok     (0m0.000s 0m0.008s)
1134. deletes are aborted cleanly (ovsdb-transaction.at:385): ok     (0m0.000s 0m0.004s)
1135. uuid-name must be <id> (ovsdb-execution.at:147): ok     (0m0.016s 0m0.008s)
1137. duplicate uuid-name not allowed (ovsdb-execution.at:166): ok     (0m0.020s 0m0.008s)
1136. named-uuid must be <id> (ovsdb-execution.at:157): ok     (0m0.012s 0m0.016s)
1138. insert default row, query table (ovsdb-execution.at:1102): ok     (0m0.016s 0m0.000s)
1140. insert rows, query by value (ovsdb-execution.at:1102): ok     (0m0.000s 0m0.024s)
1139. insert row, query table (ovsdb-execution.at:1102): ok     (0m0.004s 0m0.020s)
1141. insert rows, query by named-uuid (ovsdb-execution.at:1102): ok     (0m0.016s 0m0.004s)
1142. insert rows, update rows by value (ovsdb-execution.at:1102): ok     (0m0.008s 0m0.012s)
1143. insert rows, mutate rows (ovsdb-execution.at:1102): ok     (0m0.012s 0m0.016s)
1144. insert rows, delete by named-uuid (ovsdb-execution.at:1102): ok     (0m0.008s 0m0.008s)
1145. insert rows, delete rows by value (ovsdb-execution.at:1102): ok     (0m0.024s 0m0.000s)
1146. insert rows, delete by (non-matching) value (ovsdb-execution.at:1102): ok     (0m0.004s 0m0.016s)
1147. insert rows, delete all (ovsdb-execution.at:1102): ok     (0m0.008s 0m0.024s)
1148. insert row, query table, commit (ovsdb-execution.at:1102): ok     (0m0.012s 0m0.016s)
1149. insert row, query table, commit durably (ovsdb-execution.at:1102): ok     (0m0.016s 0m0.004s)
1150. equality wait with correct rows (ovsdb-execution.at:1102): ok     (0m0.008s 0m0.012s)
1151. equality wait with extra row (ovsdb-execution.at:1102): ok     (0m0.008s 0m0.020s)
1152. equality wait with missing row (ovsdb-execution.at:1102): ok     (0m0.012s 0m0.012s)
1153. inequality wait with correct rows (ovsdb-execution.at:1102): ok     (0m0.020s 0m0.008s)
1154. inequality wait with extra row (ovsdb-execution.at:1102): ok     (0m0.008s 0m0.008s)
1155. inequality wait with missing row (ovsdb-execution.at:1102): ok     (0m0.008s 0m0.020s)
1156. insert and update constraints (ovsdb-execution.at:1102): ok     (0m0.012s 0m0.016s)
1157. index uniqueness checking (ovsdb-execution.at:1102): ok     (0m0.020s 0m0.008s)
1158. referential integrity -- simple (ovsdb-execution.at:1102): ok     (0m0.008s 0m0.012s)
1161. immutable columns (ovsdb-execution.at:1102): ok     (0m0.012s 0m0.016s)
1159. referential integrity -- mutual references (ovsdb-execution.at:1102): ok     (0m0.008s 0m0.016s)
1160. weak references (ovsdb-execution.at:1102): ok     (0m0.016s 0m0.008s)
1162. garbage collection (ovsdb-execution.at:1102): ok     (0m0.008s 0m0.012s)
1165. trigger fires after delay (ovsdb-trigger.at:61): ok     (0m0.008s 0m0.016s)
1163. trigger fires immediately (ovsdb-trigger.at:15): ok     (0m0.012s 0m0.012s)
1164. trigger times out (ovsdb-trigger.at:38): ok     (0m0.012s 0m0.008s)
1166. delayed trigger modifies database (ovsdb-trigger.at:92): ok     (0m0.012s 0m0.000s)
1167. one delayed trigger wakes up another (ovsdb-trigger.at:132): ok     (0m0.008s 0m0.008s)
1168. insert default row, query table (ovsdb-tool.at:30): ok     (0m0.008s 0m0.016s)
1169. insert row, query table (ovsdb-tool.at:30): ok     (0m0.008s 0m0.024s)
1170. insert rows, query by value (ovsdb-tool.at:30): ok     (0m0.012s 0m0.020s)
1171. insert rows, query by named-uuid (ovsdb-tool.at:30): ok     (0m0.016s 0m0.012s)
1174. insert rows, delete by named-uuid (ovsdb-tool.at:30): ok     (0m0.020s 0m0.012s)
1173. insert rows, mutate rows (ovsdb-tool.at:30): ok     (0m0.016s 0m0.024s)
1172. insert rows, update rows by value (ovsdb-tool.at:30): ok     (0m0.012s 0m0.036s)
1175. insert rows, delete rows by value (ovsdb-tool.at:30): ok     (0m0.016s 0m0.028s)
1178. insert row, query table, commit (ovsdb-tool.at:30): ok     (0m0.016s 0m0.004s)
1176. insert rows, delete by (non-matching) value (ovsdb-tool.at:30): ok     (0m0.016s 0m0.016s)
1177. insert rows, delete all (ovsdb-tool.at:30): ok     (0m0.000s 0m0.020s)
1179. insert row, query table, commit durably (ovsdb-tool.at:30): ok     (0m0.012s 0m0.012s)
1180. equality wait with correct rows (ovsdb-tool.at:30): ok     (0m0.008s 0m0.008s)
1181. equality wait with extra row (ovsdb-tool.at:30): ok     (0m0.012s 0m0.012s)
1182. equality wait with missing row (ovsdb-tool.at:30): ok     (0m0.008s 0m0.012s)
1183. inequality wait with correct rows (ovsdb-tool.at:30): ok     (0m0.008s 0m0.012s)
1184. inequality wait with extra row (ovsdb-tool.at:30): ok     (0m0.008s 0m0.012s)
1185. inequality wait with missing row (ovsdb-tool.at:30): ok     (0m0.016s 0m0.008s)
1186. insert and update constraints (ovsdb-tool.at:30): ok     (0m0.016s 0m0.016s)
1187. index uniqueness checking (ovsdb-tool.at:30): ok     (0m0.016s 0m0.024s)
1189. referential integrity -- mutual references (ovsdb-tool.at:30): ok     (0m0.024s 0m0.020s)
1188. referential integrity -- simple (ovsdb-tool.at:30): ok     (0m0.012s 0m0.044s)
1191. immutable columns (ovsdb-tool.at:30): ok     (0m0.016s 0m0.020s)
1193. transaction comments (ovsdb-tool.at:32): ok     (0m0.012s 0m0.020s)
1190. weak references (ovsdb-tool.at:30): ok     (0m0.032s 0m0.060s)
1192. garbage collection (ovsdb-tool.at:30): ok     (0m0.020s 0m0.064s)
1197. ovsdb-tool schema-version (ovsdb-tool.at:285): ok     (0m0.000s 0m0.008s)
1195. ovsdb-tool convert -- removing a column (ovsdb-tool.at:158): ok     (0m0.024s 0m0.068s)
1196. ovsdb-tool convert -- adding a column (ovsdb-tool.at:222): ok     (0m0.052s 0m0.044s)
1198. ovsdb-tool db-version (ovsdb-tool.at:292): ok     (0m0.000s 0m0.008s)
1194. ovsdb-tool compact (ovsdb-tool.at:50): ok     (0m0.068s 0m0.112s)
1199. ovsdb-tool schema-cksum (ovsdb-tool.at:301): ok     (0m0.000s 0m0.004s)
1200. ovsdb-tool db-cksum (ovsdb-tool.at:308): ok     (0m0.008s 0m0.000s)
1201. ovsdb-tool needs-conversion (no conversion needed) (ovsdb-tool.at:317): ok     (0m0.004s 0m0.004s)
1202. ovsdb-tool needs-conversion (conversion needed) (ovsdb-tool.at:326): ok     (0m0.004s 0m0.004s)
1203. insert default row, query table (ovsdb-server.at:39): ok     (0m0.016s 0m0.012s)
1206. insert rows, query by named-uuid (ovsdb-server.at:39): ok     (0m0.020s 0m0.024s)
1204. insert row, query table (ovsdb-server.at:39): ok     (0m0.024s 0m0.028s)
1205. insert rows, query by value (ovsdb-server.at:39): ok     (0m0.020s 0m0.020s)
1207. insert rows, update rows by value (ovsdb-server.at:39): ok     (0m0.008s 0m0.024s)
1209. insert rows, delete by named-uuid (ovsdb-server.at:39): ok     (0m0.008s 0m0.032s)
1208. insert rows, mutate rows (ovsdb-server.at:39): ok     (0m0.012s 0m0.044s)
1210. insert rows, delete rows by value (ovsdb-server.at:39): ok     (0m0.020s 0m0.032s)
1211. insert rows, delete by (non-matching) value (ovsdb-server.at:39): ok     (0m0.008s 0m0.012s)
1213. insert row, query table, commit (ovsdb-server.at:39): ok     (0m0.012s 0m0.016s)
1212. insert rows, delete all (ovsdb-server.at:39): ok     (0m0.004s 0m0.016s)
1214. insert row, query table, commit durably (ovsdb-server.at:39): ok     (0m0.000s 0m0.020s)
1215. equality wait with correct rows (ovsdb-server.at:39): ok     (0m0.004s 0m0.020s)
1217. equality wait with missing row (ovsdb-server.at:39): ok     (0m0.008s 0m0.028s)
1216. equality wait with extra row (ovsdb-server.at:39): ok     (0m0.020s 0m0.024s)
1218. inequality wait with correct rows (ovsdb-server.at:39): ok     (0m0.024s 0m0.016s)
1219. inequality wait with extra row (ovsdb-server.at:39): ok     (0m0.004s 0m0.012s)
1220. inequality wait with missing row (ovsdb-server.at:39): ok     (0m0.012s 0m0.032s)
1221. insert and update constraints (ovsdb-server.at:39): ok     (0m0.024s 0m0.036s)
1222. index uniqueness checking (ovsdb-server.at:39): ok     (0m0.020s 0m0.032s)
1223. referential integrity -- simple (ovsdb-server.at:39): ok     (0m0.016s 0m0.024s)
1224. referential integrity -- mutual references (ovsdb-server.at:39): ok     (0m0.012s 0m0.032s)
1226. immutable columns (ovsdb-server.at:39): ok     (0m0.020s 0m0.040s)
1228. truncating corrupted database log (ovsdb-server.at:43): ok     (0m0.016s 0m0.048s)
1225. weak references (ovsdb-server.at:39): ok     (0m0.024s 0m0.060s)
1229. truncating database log with bad transaction (ovsdb-server.at:90): ok     (0m0.008s 0m0.048s)
1227. garbage collection (ovsdb-server.at:39): ok     (0m0.024s 0m0.056s)
1230. ovsdb-client get-schema-version (ovsdb-server.at:138): ok     (0m0.004s 0m0.008s)
1231. database multiplexing implementation (ovsdb-server.at:149): ok     (0m0.004s 0m0.012s)
1232. ovsdb-server/add-db and remove-db (ovsdb-server.at:169): ok     (0m0.016s 0m0.020s)
1235. --remote=db: implementation (ovsdb-server.at:309): ok     (0m0.012s 0m0.028s)
1233. ovsdb-server/add-db with --monitor (ovsdb-server.at:247): ok     (0m0.012s 0m0.004s)
1234. ovsdb-server/add-db and remove-db with --monitor (ovsdb-server.at:279): ok     (0m0.012s 0m0.016s)
1239. SSL db: implementation (ovsdb-server.at:480): ok     (0m0.032s 0m0.016s)
1236. ovsdb-server/add-remote and remove-remote (ovsdb-server.at:374): ok     (0m0.004s 0m0.020s)
1238. ovsdb-server/add-remote and remove-remote with --monitor (ovsdb-server.at:446): ok     (0m0.008s 0m0.016s)
1237. ovsdb-server/add-remote with --monitor (ovsdb-server.at:416): ok     (0m0.008s 0m0.008s)
1242. insert default row, query table (ovsdb-server.at:789): ok     (0m0.052s 0m0.044s)
1243. insert row, query table (ovsdb-server.at:789): ok     (0m0.064s 0m0.032s)
1240. compacting online (ovsdb-server.at:534): ok     (0m0.084s 0m0.124s)
1245. insert rows, query by named-uuid (ovsdb-server.at:789): ok     (0m0.040s 0m0.016s)
1244. insert rows, query by value (ovsdb-server.at:789): ok     (0m0.108s 0m0.056s)
1246. insert rows, update rows by value (ovsdb-server.at:789): ok     (0m0.112s 0m0.044s)
1247. insert rows, mutate rows (ovsdb-server.at:789): ok     (0m0.132s 0m0.028s)
1248. insert rows, delete by named-uuid (ovsdb-server.at:789): ok     (0m0.036s 0m0.024s)
1241. ovsdb-server combines updates on backlogged connections (ovsdb-server.at:667): ok     (0m0.384s 0m0.240s)
1249. insert rows, delete rows by value (ovsdb-server.at:789): ok     (0m0.104s 0m0.048s)
1251. insert rows, delete all (ovsdb-server.at:789): ok     (0m0.036s 0m0.028s)
1252. insert row, query table, commit (ovsdb-server.at:789): ok     (0m0.052s 0m0.012s)
1250. insert rows, delete by (non-matching) value (ovsdb-server.at:789): ok     (0m0.100s 0m0.056s)
1253. insert row, query table, commit durably (ovsdb-server.at:789): ok     (0m0.024s 0m0.040s)
1255. equality wait with extra row (ovsdb-server.at:789): ok     (0m0.036s 0m0.024s)
1254. equality wait with correct rows (ovsdb-server.at:789): ok     (0m0.032s 0m0.028s)
1256. equality wait with missing row (ovsdb-server.at:789): ok     (0m0.036s 0m0.024s)
1257. inequality wait with correct rows (ovsdb-server.at:789): ok     (0m0.020s 0m0.028s)
1258. inequality wait with extra row (ovsdb-server.at:789): ok     (0m0.044s 0m0.036s)
1259. inequality wait with missing row (ovsdb-server.at:789): ok     (0m0.040s 0m0.024s)
1260. insert and update constraints (ovsdb-server.at:789): ok     (0m0.148s 0m0.040s)
1261. index uniqueness checking (ovsdb-server.at:789): ok     (0m0.208s 0m0.056s)
1263. referential integrity -- mutual references (ovsdb-server.at:789): ok     (0m0.200s 0m0.064s)
1262. referential integrity -- simple (ovsdb-server.at:789): ok     (0m0.240s 0m0.092s)
1265. immutable columns (ovsdb-server.at:789): ok     (0m0.168s 0m0.040s)
1264. weak references (ovsdb-server.at:789): ok     (0m0.420s 0m0.088s)
1267. insert default row, query table (ovsdb-server.at:828): ok     (0m0.068s 0m0.032s)
1268. ovsdb-client get-schema-version - tcp socket (ovsdb-server.at:832): ok     (0m0.008s 0m0.016s)
1269. insert default row, query table (ovsdb-server.at:878): ok     (0m0.012s 0m0.016s)
1270. insert row, query table (ovsdb-server.at:878): ok     (0m0.024s 0m0.020s)
1266. garbage collection (ovsdb-server.at:789): ok     (0m0.420s 0m0.092s)
1272. insert rows, query by named-uuid (ovsdb-server.at:878): ok     (0m0.012s 0m0.016s)
1271. insert rows, query by value (ovsdb-server.at:878): ok     (0m0.012s 0m0.032s)
1273. insert rows, update rows by value (ovsdb-server.at:878): ok     (0m0.020s 0m0.028s)
1274. insert rows, mutate rows (ovsdb-server.at:878): ok     (0m0.008s 0m0.024s)
1275. insert rows, delete by named-uuid (ovsdb-server.at:878): ok     (0m0.016s 0m0.008s)
1276. insert rows, delete rows by value (ovsdb-server.at:878): ok     (0m0.016s 0m0.016s)
1277. insert rows, delete by (non-matching) value (ovsdb-server.at:878): ok     (0m0.012s 0m0.024s)
1279. insert row, query table, commit (ovsdb-server.at:878): ok     (0m0.016s 0m0.024s)
1278. insert rows, delete all (ovsdb-server.at:878): ok     (0m0.016s 0m0.016s)
1280. insert row, query table, commit durably (ovsdb-server.at:878): ok     (0m0.012s 0m0.016s)
1281. equality wait with correct rows (ovsdb-server.at:878): ok     (0m0.000s 0m0.024s)
1283. equality wait with missing row (ovsdb-server.at:878): ok     (0m0.024s 0m0.016s)
1282. equality wait with extra row (ovsdb-server.at:878): ok     (0m0.012s 0m0.016s)
1284. inequality wait with correct rows (ovsdb-server.at:878): ok     (0m0.016s 0m0.008s)
1285. inequality wait with extra row (ovsdb-server.at:878): ok     (0m0.012s 0m0.020s)
1286. inequality wait with missing row (ovsdb-server.at:878): ok     (0m0.012s 0m0.028s)
1287. insert and update constraints (ovsdb-server.at:878): ok     (0m0.016s 0m0.028s)
1288. index uniqueness checking (ovsdb-server.at:878): ok     (0m0.024s 0m0.048s)
1289. referential integrity -- simple (ovsdb-server.at:878): ok     (0m0.016s 0m0.052s)
1290. referential integrity -- mutual references (ovsdb-server.at:878): ok     (0m0.016s 0m0.044s)
1292. immutable columns (ovsdb-server.at:878): ok     (0m0.012s 0m0.036s)
1291. weak references (ovsdb-server.at:878): ok     (0m0.032s 0m0.060s)
1294. insert default row, query table (ovsdb-server.at:916): ok     (0m0.012s 0m0.020s)
1295. insert default row, query table (ovsdb-server.at:952): ok     (0m0.024s 0m0.028s)
1296. insert row, query table (ovsdb-server.at:952): ok     (0m0.040s 0m0.016s)
1293. garbage collection (ovsdb-server.at:878): ok     (0m0.032s 0m0.056s)
1298. insert rows, query by named-uuid (ovsdb-server.at:952): ok     (0m0.012s 0m0.020s)
1297. insert rows, query by value (ovsdb-server.at:952): ok     (0m0.036s 0m0.028s)
1299. insert rows, update rows by value (ovsdb-server.at:952): ok     (0m0.044s 0m0.024s)
1300. insert rows, mutate rows (ovsdb-server.at:952): ok     (0m0.040s 0m0.036s)
1301. insert rows, delete by named-uuid (ovsdb-server.at:952): ok     (0m0.012s 0m0.028s)
1304. insert rows, delete all (ovsdb-server.at:952): ok     (0m0.012s 0m0.024s)
1302. insert rows, delete rows by value (ovsdb-server.at:952): ok     (0m0.036s 0m0.032s)
1303. insert rows, delete by (non-matching) value (ovsdb-server.at:952): ok     (0m0.036s 0m0.032s)
1305. insert row, query table, commit (ovsdb-server.at:952): ok     (0m0.020s 0m0.020s)
1306. insert row, query table, commit durably (ovsdb-server.at:952): ok     (0m0.024s 0m0.004s)
1309. equality wait with missing row (ovsdb-server.at:952): ok     (0m0.032s 0m0.012s)
1307. equality wait with correct rows (ovsdb-server.at:952): ok     (0m0.032s 0m0.008s)
1308. equality wait with extra row (ovsdb-server.at:952): ok     (0m0.024s 0m0.016s)
1310. inequality wait with correct rows (ovsdb-server.at:952): ok     (0m0.016s 0m0.012s)
1312. inequality wait with missing row (ovsdb-server.at:952): ok     (0m0.012s 0m0.032s)
1311. inequality wait with extra row (ovsdb-server.at:952): ok     (0m0.008s 0m0.032s)
1313. insert and update constraints (ovsdb-server.at:952): ok     (0m0.032s 0m0.060s)
1314. index uniqueness checking (ovsdb-server.at:952): ok     (0m0.068s 0m0.104s)
1316. referential integrity -- mutual references (ovsdb-server.at:952): ok     (0m0.068s 0m0.092s)
1315. referential integrity -- simple (ovsdb-server.at:952): ok     (0m0.080s 0m0.120s)
1318. immutable columns (ovsdb-server.at:952): ok     (0m0.044s 0m0.056s)
1317. weak references (ovsdb-server.at:952): ok     (0m0.112s 0m0.164s)
1320. monitor insert into empty table (ovsdb-monitor.at:42): ok     (0m0.032s 0m0.028s)
1321. monitor insert into populated table (ovsdb-monitor.at:54): ok     (0m0.032s 0m0.028s)
1319. garbage collection (ovsdb-server.at:952): ok     (0m0.100s 0m0.168s)
1322. monitor delete (ovsdb-monitor.at:72): ok     (0m0.024s 0m0.044s)
1323. monitor row update (ovsdb-monitor.at:90): ok     (0m0.028s 0m0.040s)
1325. monitor insert-and-update transaction (ovsdb-monitor.at:133): ok     (0m0.036s 0m0.044s)
1327. monitor weak reference change (ovsdb-monitor.at:185): ok     (0m0.024s 0m0.052s)
1326. monitor insert-update-and-delete transaction (ovsdb-monitor.at:156): ok     (0m0.040s 0m0.032s)
1324. monitor no-op row updates (ovsdb-monitor.at:110): ok     (0m0.040s 0m0.028s)
1328. monitor insert-update-and-delete transaction (ovsdb-monitor.at:220): ok     (0m0.024s 0m0.028s)
1331. monitor insert only (ovsdb-monitor.at:298): ok     (0m0.036s 0m0.040s)
1329. monitor all operations (ovsdb-monitor.at:271): ok     (0m0.024s 0m0.052s)
1330. monitor initial only (ovsdb-monitor.at:291): ok     (0m0.032s 0m0.044s)
1334. simple idl, initially empty, no ops - C (ovsdb-idl.at:103): ok     (0m0.016s 0m0.032s)
1333. monitor modify only (ovsdb-monitor.at:313): ok     (0m0.032s 0m0.040s)
1332. monitor delete only (ovsdb-monitor.at:305): ok     (0m0.024s 0m0.052s)
1335. simple idl, initially empty, no ops - Python (ovsdb-idl.at:103): ok     (0m0.424s 0m0.136s)
1336. simple idl, initially empty, no ops - Python tcp (ovsdb-idl.at:103): ok     (0m0.412s 0m0.104s)
1337. simple idl, initially empty, no ops - Python tcp6 (ovsdb-idl.at:103): ok     (0m0.384s 0m0.120s)
1338. simple idl, initially empty, various ops - C (ovsdb-idl.at:110): ok     (0m0.020s 0m0.036s)
1342. simple idl, initially populated - C (ovsdb-idl.at:188): ok     (0m0.008s 0m0.008s)
1339. simple idl, initially empty, various ops - Python (ovsdb-idl.at:110): ok     (0m0.484s 0m0.076s)
1343. simple idl, initially populated - Python (ovsdb-idl.at:188): ok     (0m0.332s 0m0.104s)
1340. simple idl, initially empty, various ops - Python tcp (ovsdb-idl.at:110): ok     (0m0.440s 0m0.144s)
1341. simple idl, initially empty, various ops - Python tcp6 (ovsdb-idl.at:110): ok     (0m0.428s 0m0.144s)
1344. simple idl, initially populated - Python tcp (ovsdb-idl.at:188): ok     (0m0.432s 0m0.132s)
1346. simple idl, writing via IDL - C (ovsdb-idl.at:219): ok     (0m0.016s 0m0.040s)
1345. simple idl, initially populated - Python tcp6 (ovsdb-idl.at:188): ok     (0m0.420s 0m0.148s)
1347. simple idl, writing via IDL - Python (ovsdb-idl.at:219): ok     (0m0.412s 0m0.152s)
1350. simple idl, handling verification failure - C (ovsdb-idl.at:250): ok     (0m0.012s 0m0.040s)
1349. simple idl, writing via IDL - Python tcp6 (ovsdb-idl.at:219): ok     (0m0.500s 0m0.172s)
1348. simple idl, writing via IDL - Python tcp (ovsdb-idl.at:219): ok     (0m0.540s 0m0.136s)
1351. simple idl, handling verification failure - Python (ovsdb-idl.at:250): ok     (0m0.500s 0m0.156s)
1354. simple idl, increment operation - C (ovsdb-idl.at:281): ok     (0m0.024s 0m0.028s)
1352. simple idl, handling verification failure - Python tcp (ovsdb-idl.at:250): ok     (0m0.512s 0m0.116s)
1353. simple idl, handling verification failure - Python tcp6 (ovsdb-idl.at:250): ok     (0m0.488s 0m0.140s)
1355. simple idl, increment operation - Python (ovsdb-idl.at:281): ok     (0m0.504s 0m0.152s)
1358. simple idl, aborting - C (ovsdb-idl.at:293): ok     (0m0.016s 0m0.036s)
1356. simple idl, increment operation - Python tcp (ovsdb-idl.at:281): ok     (0m0.448s 0m0.208s)
1357. simple idl, increment operation - Python tcp6 (ovsdb-idl.at:281): ok     (0m0.464s 0m0.116s)
1362. simple idl, destroy without commit or abort - C (ovsdb-idl.at:307): ok     (0m0.020s 0m0.032s)
1359. simple idl, aborting - Python (ovsdb-idl.at:293): ok     (0m0.484s 0m0.160s)
1361. simple idl, aborting - Python tcp6 (ovsdb-idl.at:293): ok     (0m0.496s 0m0.148s)
1360. simple idl, aborting - Python tcp (ovsdb-idl.at:293): ok     (0m0.492s 0m0.164s)
1366. self-linking idl, consistent ops - C (ovsdb-idl.at:321): ok     (0m0.016s 0m0.040s)
1363. simple idl, destroy without commit or abort - Python (ovsdb-idl.at:307): ok     (0m0.444s 0m0.128s)
1364. simple idl, destroy without commit or abort - Python tcp (ovsdb-idl.at:307): ok     (0m0.484s 0m0.156s)
1365. simple idl, destroy without commit or abort - Python tcp6 (ovsdb-idl.at:307): ok     (0m0.488s 0m0.152s)
1367. self-linking idl, consistent ops - Python (ovsdb-idl.at:321): ok     (0m0.560s 0m0.116s)
1370. self-linking idl, inconsistent ops - C (ovsdb-idl.at:365): ok     (0m0.028s 0m0.040s)
1368. self-linking idl, consistent ops - Python tcp (ovsdb-idl.at:321): ok     (0m0.528s 0m0.164s)
1369. self-linking idl, consistent ops - Python tcp6 (ovsdb-idl.at:321): ok     (0m0.488s 0m0.128s)
1374. self-linking idl, sets - C (ovsdb-idl.at:413): ok     (0m0.016s 0m0.036s)
1372. self-linking idl, inconsistent ops - Python tcp (ovsdb-idl.at:365): ok     (0m0.496s 0m0.152s)
1371. self-linking idl, inconsistent ops - Python (ovsdb-idl.at:365): ok     (0m0.592s 0m0.136s)
1373. self-linking idl, inconsistent ops - Python tcp6 (ovsdb-idl.at:365): ok     (0m0.544s 0m0.144s)
1378. external-linking idl, consistent ops - C (ovsdb-idl.at:463): ok     (0m0.020s 0m0.028s)
1375. self-linking idl, sets - Python (ovsdb-idl.at:413): ok     (0m0.580s 0m0.136s)
1376. self-linking idl, sets - Python tcp (ovsdb-idl.at:413): ok     (0m0.488s 0m0.172s)
1377. self-linking idl, sets - Python tcp6 (ovsdb-idl.at:413): ok     (0m0.516s 0m0.188s)
1379. external-linking idl, consistent ops - Python (ovsdb-idl.at:463): ok     (0m0.452s 0m0.160s)
1381. external-linking idl, consistent ops - Python tcp6 (ovsdb-idl.at:463): ok     (0m0.428s 0m0.148s)
1380. external-linking idl, consistent ops - Python tcp (ovsdb-idl.at:463): ok     (0m0.540s 0m0.168s)
1382. external-linking idl, insert ops - Python (ovsdb-idl.at:481): ok     (0m0.520s 0m0.144s)
1383. getattr idl, insert ops - Python (ovsdb-idl.at:491): ok     (0m0.392s 0m0.156s)
1385. add-br a (ovs-vsctl.at:179): ok     (0m0.020s 0m0.064s)
1386. add-br a, add-br a (ovs-vsctl.at:189): ok     (0m0.020s 0m0.012s)
1388. add-br a, add-br b, del-br a (ovs-vsctl.at:216): ok     (0m0.040s 0m0.076s)
1387. add-br a, add-br b (ovs-vsctl.at:199): ok     (0m0.028s 0m0.120s)
1389. add-br a, del-br a, add-br a (ovs-vsctl.at:227): ok     (0m0.036s 0m0.084s)
1391. add-br a, add-port a a1, add-port a a1 (ovs-vsctl.at:261): ok     (0m0.008s 0m0.032s)
1390. add-br a, add-port a a1, add-port a a2 (ovs-vsctl.at:247): ok     (0m0.056s 0m0.060s)
1392. add-br a b, add-port a a1, add-port b b1, del-br a (ovs-vsctl.at:273): ok     (0m0.028s 0m0.076s)
1384. ovs-vsctl connection retry (ovs-vsctl.at:145): ok     (0m0.000s 0m0.032s)
1393. add-br a, add-bond a bond0 a1 a2 a3 (ovs-vsctl.at:295): ok     (0m0.052s 0m0.064s)
1395. add-br a, add-bond a bond0 a1 a2 a3, del-port bond0 (ovs-vsctl.at:344): ok     (0m0.040s 0m0.044s)
1397. controllers (ovs-vsctl.at:417): ok     (0m0.016s 0m0.024s)
1394. add-br a b, add-port a a1, add-port b b1, del-port a a1 (ovs-vsctl.at:313): ok     (0m0.072s 0m0.144s)
1396. external IDs (ovs-vsctl.at:361): ok     (0m0.044s 0m0.172s)
1399. list bridges -- real and fake (VLAN 9) (ovs-vsctl.at:544): ok     (0m0.024s 0m0.060s)
1398. simple fake bridge (VLAN 9) (ovs-vsctl.at:544): ok     (0m0.068s 0m0.132s)
1401. simple fake bridge + del-br real bridge (VLAN 9) (ovs-vsctl.at:544): ok     (0m0.032s 0m0.056s)
1400. simple fake bridge + del-br fake bridge (VLAN 9) (ovs-vsctl.at:544): ok     (0m0.044s 0m0.100s)
1402. simple fake bridge + external IDs (VLAN 9) (ovs-vsctl.at:544): ok     (0m0.076s 0m0.164s)
1404. list bridges -- real and fake (VLAN 0) (ovs-vsctl.at:545): ok     (0m0.028s 0m0.084s)
1403. simple fake bridge (VLAN 0) (ovs-vsctl.at:545): ok     (0m0.080s 0m0.168s)
1405. simple fake bridge + del-br fake bridge (VLAN 0) (ovs-vsctl.at:545): ok     (0m0.044s 0m0.124s)
1406. simple fake bridge + del-br real bridge (VLAN 0) (ovs-vsctl.at:545): ok     (0m0.024s 0m0.052s)
1409. fake bridge on bond + del-br fake bridge (ovs-vsctl.at:569): ok     (0m0.056s 0m0.116s)
1407. simple fake bridge + external IDs (VLAN 0) (ovs-vsctl.at:545): ok     (0m0.068s 0m0.156s)
1408. fake bridge on bond (ovs-vsctl.at:557): ok     (0m0.032s 0m0.180s)
1410. fake bridge on bond + del-br real bridge (ovs-vsctl.at:581): ok     (0m0.036s 0m0.044s)
1411. managers (ovs-vsctl.at:593): ok     (0m0.020s 0m0.012s)
1412. database commands -- positive checks (ovs-vsctl.at:619): ok     (0m0.064s 0m0.096s)
1415. database commands -- wait-until immediately true (ovs-vsctl.at:982): ok     (0m0.040s 0m0.060s)
1413. database commands -- negative checks (ovs-vsctl.at:725): ok     (0m0.056s 0m0.212s)
1417. --id option on create, get commands (ovs-vsctl.at:1035): ok     (0m0.052s 0m0.056s)
1418. unreferenced record warnings (ovs-vsctl.at:1084): ok     (0m0.040s 0m0.060s)
1419. created row UUID is wrong in same execution (ovs-vsctl.at:1118): ok     (0m0.024s 0m0.040s)
1416. database commands -- wait-until must wait (ovs-vsctl.at:1001): ok     (0m0.020s 0m0.064s)
1420. --all option on destroy command (ovs-vsctl.at:1150): ok     (0m0.080s 0m0.212s)
1421. add-port -- reserved names 1 (ovs-vsctl.at:1198): ok     (0m0.056s 0m0.152s)
1422. add-port -- reserved names 2 (ovs-vsctl.at:1226): ok     (0m0.052s 0m0.120s)
1425. non-VLAN, non-bond (interface-reconfigure.at:697): ok     (0m0.396s 0m0.172s)
1414. database commands -- conditions (ovs-vsctl.at:847): ok     (0m0.808s 0m2.172s)
1426. VLAN, non-bond (interface-reconfigure.at:773): ok     (0m0.356s 0m0.124s)
1424. ovs-xapi-sync (ovs-xapi-sync.at:3): ok     (0m0.040s 0m0.088s)
1427. Bond, non-VLAN (interface-reconfigure.at:847): ok     (0m0.344s 0m0.140s)
1429. STP example from IEEE 802.1D-1998 (stp.at:3): ok     (0m0.004s 0m0.004s)
1430. STP example from IEEE 802.1D-2004 figures 17.4 and 17.5 (stp.at:27): ok     (0m0.036s 0m0.004s)
1431. STP example from IEEE 802.1D-2004 figure 17.6 (stp.at:70): ok     (0m0.012s 0m0.008s)
1432. STP example from IEEE 802.1D-2004 figure 17.7 (stp.at:96): ok     (0m0.008s 0m0.004s)
1433. STP.io.1.1: Link Failure (stp.at:125): ok     (0m0.012s 0m0.008s)
1423. ovs-monitor-ipsec (ovs-monitor-ipsec.at:3): ok     (0m0.060s 0m0.112s)
1434. STP.io.1.2: Repeated Network (stp.at:164): ok     (0m0.008s 0m0.004s)
1435. STP.io.1.4: Network Initialization (stp.at:188): ok     (0m0.000s 0m0.008s)
1437. STP.op.1.1 and STP.op.1.2 (stp.at:267): ok     (0m0.004s 0m0.004s)
1436. STP.io.1.5: Topology Change (stp.at:214): ok     (0m0.040s 0m0.000s)
1438. STP.op.1.4: All Ports Initialized to Designated Ports (stp.at:281): ok     (0m0.000s 0m0.004s)
1439. STP.op.3.1: Root Bridge Selection: Root ID Values (stp.at:302): ok     (0m0.004s 0m0.000s)
1440. STP.op.3.3: Root Bridge Selection: Bridge ID Values (stp.at:322): ok     (0m0.004s 0m0.004s)
1441. STP.op.3.3: Root Bridge Selection: Bridge ID Values (stp.at:345): ok     (0m0.004s 0m0.008s)
1428. VLAN on bond (interface-reconfigure.at:936): ok     (0m0.340s 0m0.108s)
1442. vlog - Python (vlog.at:3): ok     (0m0.148s 0m0.048s)
1444. vlog - vlog/reopen without log file - Python (vlog.at:135): ok     (0m0.408s 0m0.128s)
1443. vlog - vlog/reopen - Python (vlog.at:106): ok     (0m0.384s 0m0.164s)
1445. vlog - vlog/reopen can't reopen log file - Python (vlog.at:153): ok     (0m0.440s 0m0.136s)
1446. vlog - vlog/set and vlog/list - Python (vlog.at:185): ok     (0m0.404s 0m0.120s)
1448. add-ps a, add-ps a (vtep-ctl.at:144): ok     (0m0.012s 0m0.016s)
1447. add-ps a (vtep-ctl.at:136): ok     (0m0.004s 0m0.032s)
1449. add-ps a, add-ps b (vtep-ctl.at:154): ok     (0m0.012s 0m0.036s)
1450. add-ps a, add-ps b, del-ps a (vtep-ctl.at:163): ok     (0m0.012s 0m0.040s)
1451. add-ps a, del-ps a, add-ps a (vtep-ctl.at:172): ok     (0m0.028s 0m0.016s)
1452. add-ps a, add-port a a1, add-port a a2 (vtep-ctl.at:186): ok     (0m0.020s 0m0.048s)
1453. add-ps a, add-port a a1, add-port a a1 (vtep-ctl.at:199): ok     (0m0.008s 0m0.024s)
1454. add-ps a b, add-port a a1, add-port b b1, del-ps a (vtep-ctl.at:211): ok     (0m0.008s 0m0.044s)
1457. add-ls a (vtep-ctl.at:272): ok     (0m0.008s 0m0.044s)
1455. add-ps a b, add-port a a1, add-port b b1, del-port a a1 (vtep-ctl.at:232): ok     (0m0.036s 0m0.060s)
1458. add-ls a, add-ls a (vtep-ctl.at:280): ok     (0m0.020s 0m0.028s)
1456. add-ps a b, add-port a p1, add-port b p1, del-port a p1 (vtep-ctl.at:249): ok     (0m0.032s 0m0.100s)
1459. add-ls a, add-ls b (vtep-ctl.at:290): ok     (0m0.028s 0m0.028s)
1460. add-ls a, add-ls b, del-ls a (vtep-ctl.at:299): ok     (0m0.016s 0m0.032s)
1461. add-ls a, del-ls a, add-ls a (vtep-ctl.at:308): ok     (0m0.008s 0m0.044s)
1462. bind-ls ps1 pp1 300 ls1 (vtep-ctl.at:326): ok     (0m0.012s 0m0.064s)
1463. bind-ls ps1 pp1 300 ls1, bind-ls ps1 pp1 400 ls2 (vtep-ctl.at:344): ok     (0m0.012s 0m0.104s)
1464. bind-ls ps1 pp1 300, bind-ls ps2 pp2 300 ls2 (vtep-ctl.at:366): ok     (0m0.024s 0m0.112s)
1465. add-ucast-local ls1 (vtep-ctl.at:397): ok     (0m0.024s 0m0.036s)
1466. add-ucast-local ls1, overwrite (vtep-ctl.at:424): ok     (0m0.024s 0m0.024s)
1469. add-ucast-remote ls1, overwrite (vtep-ctl.at:502): ok     (0m0.024s 0m0.044s)
1468. add-ucast-remote ls1 (vtep-ctl.at:475): ok     (0m0.004s 0m0.068s)
1467. add-ucast-local ls1, del-ucast-local ls1 (vtep-ctl.at:444): ok     (0m0.028s 0m0.052s)
1470. add-ucast-remote ls1, del-ucast-remote ls1 (vtep-ctl.at:522): ok     (0m0.028s 0m0.032s)
1472. add-mcast-local ls1 (vtep-ctl.at:584): ok     (0m0.028s 0m0.052s)
1471. add-ucast-local ls1, add-ucast-remote ls1 (vtep-ctl.at:553): ok     (0m0.024s 0m0.064s)
1473. add-mcast-local ls1, del-mcast-local ls1 (vtep-ctl.at:613): ok     (0m0.032s 0m0.056s)
1474. add-mcast-remote ls1 (vtep-ctl.at:650): ok     (0m0.012s 0m0.048s)
1476. add-mcast-local ls1, add-mcast-remote ls1 (vtep-ctl.at:716): ok     (0m0.024s 0m0.084s)
1475. add-mcast-remote ls1, del-mcast-remote ls1 (vtep-ctl.at:679): ok     (0m0.012s 0m0.080s)
1477. add local and remote macs, clear-local-macs (vtep-ctl.at:751): ok     (0m0.028s 0m0.084s)
1478. add local and remote macs, clear-remote-macs (vtep-ctl.at:808): ok     (0m0.032s 0m0.076s)
1479. managers (vtep-ctl.at:868): ok     (0m0.012s 0m0.004s)
testsuite: ending at: Thu Apr 10 15:55:56 CEST 2014
testsuite: test suite duration: 0h 4m 3s

## ------------- ##
## Test results. ##
## ------------- ##

All 1479 tests were successful.
